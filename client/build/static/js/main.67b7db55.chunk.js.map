{"version":3,"sources":["components/routes/PrivateRoute.js","utils/setAuthToken.js","actions/userActions.js","actions/types.js","components/parts/MainLoading.js","components/parts/Navbar.js","components/parts/IndividualNote.js","components/parts/PartialLoading.js","components/parts/NotesMode.js","components/parts/IndividualProcess.js","components/parts/ProcessesMode.js","components/parts/TaskTimeTable.js","components/parts/IndividualTask.js","components/parts/TasksMode.js","components/parts/IndividualCollection.js","components/parts/CollectionsMode.js","components/parts/IndividualErrorMsg.js","components/parts/MessageBoard.js","components/parts/ErrorMsgBoard.js","components/pages/Home.js","components/pages/Login.js","components/pages/Register.js","components/parts/IndividualSubtask.js","components/parts/RemoveFromCollection.js","components/parts/AddToCollectionForm.js","components/pages/TaskDetail.js","components/parts/IndividualStep.js","components/pages/ProcessDetail.js","components/pages/CollectionDetail.js","components/pages/NoteDetail.js","reducers/userReducer.js","reducers/index.js","store.js","App.js","index.js"],"names":["PrivateRoute","Component","component","rest","useSelector","state","user","isAuthenticated","loading","render","props","to","setAuthToken","token","axios","defaults","headers","common","config","setLoading","loadingMode","dispatch","type","payload","setLoadingPartial","changeMode","modeToDisplay","includes","updateNote","formData","a","noteToUpdateId","patch","updatedNoteRes","data","setErrorMsgs","response","status","error_msg","createProcess","post","createProcessRes","deleteTaskAndSubtasks","idToDelete","isForDetail","delete","taksToDelete","success","finishTask","idToFinish","taskToFinish","unfinishTask","idToUnfinish","taskToUnfinish","updateTask","taskToUpdateId","updatedTaskRes","loadUserCollections","get","loadCollectionsRes","collections","msg","createCollection","newCollectionRes","removeFromCollection","updatedCollection","addToCollection","error_msgs","MainLoading","className","max","Navbar","useDispatch","useState","isActive","setisActive","role","aria-label","onClick","aria-expanded","data-target","aria-hidden","id","IndividualNote","txt","note","showFullText","setShowFullText","content","length","slice","_id","PartialLoading","NotesMode","loading_partial","notes","showNewNoteForm","setShowNewNoteForm","newNoteContent","setNewNoteContent","useEffect","loadNotesRes","onSubmit","event","preventDefault","createNoteRes","err","onChange","target","value","placeholder","name","map","key","uuidv4","IndividualProcess","process","title","steps","ProcessesMode","processes","showNewProcessForm","setShowNewProcessForm","description","newProcess","setNewProcess","handleNewProcessChange","handleNewProcessFormSubmit","loadProcessesRes","TaskTimeTable","limitDate","delayToDisplay","setDelayToDisplay","colorForDelayToDisplay","setColorForDelayToDisplay","currentDate","Date","dateToCheck","currentDateOvermorrowMax","getFullYear","getMonth","getDate","treatLimitDate","locale","date","format","IndividualTask","task","isBeingUpdated","setIsBeingUpdated","updatedTaskContent","setUpdatedTaskContent","updatedTaskLimitDate","setUpdatedTaskLimitDate","htmlFor","required","selected","dateFormatCalendar","showMonthDropdown","useFullMonthInDropdown","closeOnScroll","isClearable","placeholderText","dateFormat","showTimeInput","isCompositeTask","isDone","TasksMode","tasks","showNewTaskForm","setShowNewTaskForm","newTaskContent","setNewTaskContent","newTaskLimitDate","setNewTaskLimitDate","registerLocale","fr","loadTasksRes","newTaskRes","IndividualCollection","collection","CollectionsMode","showNewCollectionForm","setShowNewCollectionForm","newCollection","setNewCollection","handleNewCollectionChange","handleNewCollectionSubmit","IndividualErrorMsg","deleteFunction","MessageBoard","messages","message","message_key","ErrorMsgBoard","error_msg_id","Home","mode","modeSwitch","Login","history","push","email","password","setUser","handleFormChange","href","test","emailIsValid","loginRes","Register","passwordConfirm","userToRegister","setUserToRegister","handleRegisterFormChange","registerRes","IndividualSubtask","subtask","localSubtask","setLocalSubtask","subtaskIsUpdating","setSubtaskIsUpdating","updatedSubtaskContent","setUpdatedSubtaskContent","updatedSubtaskLimitDate","setUpdatedSubtaskLimitDate","showSubtaskUpdateForm","setShowSubtaskUpdateForm","handleUpdateSubtask","res","updatedSubtask","subtaskToUnfinish","unfinishedSubtask","then","subtaskToFinish","finishedSubtask","RemoveFromCollection","origin","targetDocumentId","currentCollections","handleRemoveFromCollectionDemand","collectionId","adaptiveFormData","processId","taskId","noteId","removeFromCollectionRes","removeCollectionFromMotherProcess","AddToCollectionForm","selectedCollectionId","setSelectedCollectionId","handleSelectSubmit","targetCollection","find","addToCollectionRes","addCollectionToMotherProcess","closeAddToCollectionForm","index","some","doc","TaskDetail","currentTask","setCurrentTask","showAddToCollectionForm","setShowAddToCollectionForm","setIsUrgentTask","setIsPastTask","isAddingSubtask","setIsAddingSubtask","newSubtaskContent","setNewSubtaskContent","newSubtaskLimitDate","setNewSubtaskLimitDate","localSubtasks","setLocalSubtasks","updateTaskUrgencyStatus","taskToCheck","today","taskToCheckTime","setHours","match","params","subtasks","getTask","deleteSubtaskFunction","subtaskToDeleteId","subtakToDelete","filter","updatedTask","unfinishedTask","finishedTask","motherTaskId","newSubtaskRes","newSubTask","collectionObject","IndividualStep","step","updateFunction","showStepUpdateForm","setShowStepUpdateForm","updatedStep","setUpdatedStep","stepId","ProcessDetail","currentProcess","setCurrentProcess","localSteps","setLocalSteps","showProcessUpdateForm","setShowProcesUpdateForm","updatedProcess","setUpdatedProcess","showNewStepForm","setShowNewStepForm","newStep","setNewStep","handleProcessUpdateFormChange","handleProcessUpdateFormSubmit","handleNewStepFormSubmit","handleProcessDelete","deleteStepFunction","stepToDeleteId","updateStepFunction","stepToUpdateIndex","findIndex","stepUpdateRes","targetProcess","getProcess","CollectionDetail","currentCollection","setCurrentCollection","showCollectionUpdateForm","setShowCollectionUpdateForm","setUpdatedCollection","collectionRes","collectionComplete","getCollection","handleCollectionUpdateSubmit","collectionUpdateRes","handleCollectionUpdateChange","handleDeleteCollection","NoteDetail","localNote","setLocalNote","showUpdateForm","setShowUpdateForm","updatedNoteContent","setUpdatedNoteContent","getNote","handleNoteUpdate","noteToDeleteId","deletedNoteRes","initialState","localStorage","getItem","persistConfig","storage","whitelist","rootReducer","combineReducers","action","setItem","removeItem","newTask","removedTask","indexToUpdate","indexToFinish","indexToUnfinish","indexMotherTaskToUpdateId","motherTaskToAddSubtask","indexMotherTaskToDeleteSubtaskFromId","updatedMotherTask","indexNoteToUpdate","removedNote","newNote","indexCollectionToAddDocument","treatedErrors","treatedMessages","persistReducer","middleware","thunk","store","createStore","applyMiddleware","persistor","persistStore","App","exact","path","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.67b7db55.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n  const { isAuthenticated, loading } = useSelector((state) => state.user);\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        !isAuthenticated && !loading ? (\r\n          <Redirect to='/login' />\r\n        ) : (\r\n          <Component {...props} />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import axios from \"axios\";\r\n\r\nconst setAuthToken = (token) => {\r\n  if (token) {\r\n    axios.defaults.headers.common[\"Authorization\"] = `ElephantJWToken ${token}`;\r\n  } else {\r\n    delete axios.defaults.headers.common[\"x-auth-token\"];\r\n  }\r\n};\r\n\r\nexport default setAuthToken;\r\n","import axios from \"axios\";\r\n\r\nimport setAuthToken from \"../utils/setAuthToken\";\r\n\r\nimport {\r\n  SET_LOADING,\r\n  SET_LOADING_PARTIAL,\r\n  LOGIN_SUCCESS,\r\n  LOGOUT,\r\n  CHANGE_MODE,\r\n  LOAD_NOTES,\r\n  LOAD_PROCESSES,\r\n  LOAD_TASKS,\r\n  LOAD_COLLECTIONS,\r\n  NEW_TASK_ADDED,\r\n  DELETE_TASK,\r\n  UPDATE_TASk,\r\n  FINISH_TASK,\r\n  UNFINISH_TASK,\r\n  ADD_SUBTASK,\r\n  DELETE_SUBTASK,\r\n  UPDATE_NOTE,\r\n  DELETE_NOTE,\r\n  ADD_NOTE,\r\n  ADD_PROCESS,\r\n  ADD_NEW_COLLECTION,\r\n  ADD_TO_COLLECTION,\r\n  REMOVE_FROM_COLLECTION,\r\n  SET_MESSAGES,\r\n  SET_ERROR_MSGS,\r\n  DELETE_INDIVIDUAL_ERROR_MSG,\r\n  DELETE_ALL_ERROR_MSG,\r\n  DELETE_ALL_MSG,\r\n  DELETE_INDIVIDUAL_MSG,\r\n} from \"./types\";\r\n\r\n// For JSON\r\nexport const config = {\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n};\r\n\r\n// On/Off loading\r\nexport const setLoading =\r\n  (loadingMode = false) =>\r\n  (dispatch) => {\r\n    if (typeof loadingMode !== \"boolean\") {\r\n      loadingMode = false;\r\n    }\r\n\r\n    dispatch({ type: SET_LOADING, payload: loadingMode });\r\n  };\r\n\r\n// On/Off partial loading\r\nexport const setLoadingPartial =\r\n  (loadingMode = false) =>\r\n  (dispatch) => {\r\n    if (typeof loadingMode !== \"boolean\") {\r\n      loadingMode = false;\r\n    }\r\n\r\n    dispatch({ type: SET_LOADING_PARTIAL, payload: loadingMode });\r\n  };\r\n\r\n// Login user\r\nexport const login = (formData) => async (dispatch) => {\r\n  try {\r\n    dispatch(setLoading(true));\r\n\r\n    const loginRes = await axios.post(\"/api/users/login\", formData, config);\r\n\r\n    const token = loginRes.data.token; // \"token\" comes from the back end\r\n    setAuthToken(token);\r\n\r\n    dispatch({ type: LOGIN_SUCCESS, payload: loginRes.data });\r\n\r\n    // Load collections from the beginning so they can be added to documents easily\r\n    dispatch(loadUserCollections());\r\n\r\n    dispatch(setLoading(false));\r\n  } catch (err) {\r\n    dispatch(\r\n      setErrorMsgs(\r\n        err.response &&\r\n          err.response.data &&\r\n          err.response.status !== 404 &&\r\n          err.response.data.error_msg\r\n          ? err.response.data.error_msg\r\n          : [\"Oops, une erreur inattendue s'est produite\"]\r\n      )\r\n    );\r\n\r\n    dispatch(setLoading(false));\r\n  }\r\n};\r\n\r\n// Register user\r\nexport const register = (formData) => async (dispatch) => {\r\n  try {\r\n    dispatch(setLoading(true));\r\n\r\n    const registerRes = await axios.post(\r\n      \"/api/users/register\",\r\n      formData,\r\n      config\r\n    );\r\n\r\n    const token = registerRes.data.token; // \"token\" vient du back end\r\n\r\n    setAuthToken(token);\r\n\r\n    dispatch({ type: LOGIN_SUCCESS, payload: registerRes.data });\r\n\r\n    // PROTOTYPE\r\n    // Load collections from the beginning so they don't need to be loaded on many pages\r\n    dispatch(loadUserCollections());\r\n\r\n    dispatch(setLoading(false));\r\n  } catch (err) {\r\n    dispatch(\r\n      setErrorMsgs(\r\n        err.response &&\r\n          err.response.data &&\r\n          err.response.status !== 404 &&\r\n          err.response.data.error_msg\r\n          ? err.response.data.error_msg\r\n          : [\"Oops, une erreur inattendue s'est produite\"]\r\n      )\r\n    );\r\n\r\n    dispatch(setLoading(false));\r\n  }\r\n};\r\n\r\n// Logout user\r\nexport const logout = () => (dispatch) => {\r\n  //dispatch({ type: REMOVE_ALL_ALERTS });\r\n  dispatch({ type: LOGOUT });\r\n};\r\n\r\n// Change mode to display\r\nexport const changeMode =\r\n  (modeToDisplay = \"TASKS\") =>\r\n  (dispatch) => {\r\n    const possibleModes = [\"TASKS\", \"PROCESSES\", \"NOTES\", \"COLLECTIONS\"];\r\n\r\n    if (!possibleModes.includes(modeToDisplay)) {\r\n      modeToDisplay = \"TASKS\";\r\n    }\r\n    dispatch({ type: CHANGE_MODE, payload: modeToDisplay });\r\n  };\r\n\r\n/////////////////\r\n// NOTES\r\n/////////////////\r\n\r\n// Load user's notes\r\nexport const loadUserNotes = () => async (dispatch) => {\r\n  try {\r\n    dispatch(setLoadingPartial(true));\r\n    const loadNotesRes = await axios.get(\"/api/notes/get_all_notes\");\r\n\r\n    const notes = loadNotesRes.data.notes;\r\n    const msg = loadNotesRes.data.msg;\r\n\r\n    dispatch({ type: LOAD_NOTES, payload: { notes, msg } });\r\n    dispatch(setLoadingPartial(false));\r\n  } catch (err) {\r\n    dispatch(\r\n      setErrorMsgs(\r\n        err.response &&\r\n          err.response.data &&\r\n          err.response.status !== 404 &&\r\n          err.response.data.error_msg\r\n          ? err.response.data.error_msg\r\n          : [\"Oops, une erreur inattendue s'est produite\"]\r\n      )\r\n    );\r\n\r\n    dispatch(setLoadingPartial(false));\r\n  }\r\n};\r\n\r\nexport const updateNote = (formData) => async (dispatch) => {\r\n  try {\r\n    const { noteToUpdateId } = formData;\r\n\r\n    const updatedNoteRes = await axios.patch(\r\n      `/api/notes/edit_note/${noteToUpdateId}`,\r\n      formData,\r\n      config\r\n    );\r\n\r\n    dispatch({ type: UPDATE_NOTE, payload: updatedNoteRes.data });\r\n    return true;\r\n  } catch (err) {\r\n    dispatch(\r\n      setErrorMsgs(\r\n        err.response &&\r\n          err.response.data &&\r\n          err.response.status !== 404 &&\r\n          err.response.data.error_msg\r\n          ? err.response.data.error_msg\r\n          : [\"Oops, une erreur inattendue s'est produite\"]\r\n      )\r\n    );\r\n\r\n    return false;\r\n  }\r\n};\r\n\r\nexport const deleteNote = (noteToDeleteId) => async (dispatch) => {\r\n  try {\r\n    const deletedNoteRes = await axios.delete(\r\n      `/api/notes/delete_note/${noteToDeleteId}`\r\n    );\r\n\r\n    dispatch({ type: DELETE_NOTE, payload: deletedNoteRes.data });\r\n  } catch (err) {\r\n    dispatch(\r\n      setErrorMsgs(\r\n        err.response &&\r\n          err.response.data &&\r\n          err.response.status !== 404 &&\r\n          err.response.data.error_msg\r\n          ? err.response.data.error_msg\r\n          : [\"Oops, une erreur inattendue s'est produite\"]\r\n      )\r\n    );\r\n  }\r\n};\r\n\r\nexport const createNote = (formData) => async (dispatch) => {\r\n  try {\r\n    const createNoteRes = await axios.post(\r\n      \"/api/notes/new_note\",\r\n      formData,\r\n      config\r\n    );\r\n\r\n    dispatch({ type: ADD_NOTE, payload: createNoteRes.data });\r\n  } catch (err) {\r\n    dispatch(\r\n      setErrorMsgs(\r\n        err.response &&\r\n          err.response.data &&\r\n          err.response.status !== 404 &&\r\n          err.response.data.error_msg\r\n          ? err.response.data.error_msg\r\n          : [\"Oops, une erreur inattendue s'est produite\"]\r\n      )\r\n    );\r\n  }\r\n};\r\n\r\n/////////////////\r\n// PROCESSES\r\n/////////////////\r\n\r\n// Load user's processes\r\nexport const loadUserProcesses = () => async (dispatch) => {\r\n  try {\r\n    dispatch(setLoadingPartial(true));\r\n\r\n    const loadProcessesRes = await axios.get(\r\n      \"/api/processes/get_all_processes\"\r\n    );\r\n\r\n    const processes = loadProcessesRes.data.processes;\r\n    const msg = loadProcessesRes.data.msg;\r\n\r\n    dispatch({ type: LOAD_PROCESSES, payload: { processes, msg } });\r\n\r\n    dispatch(setLoadingPartial(false));\r\n  } catch (err) {\r\n    dispatch(\r\n      setErrorMsgs(\r\n        err.response &&\r\n          err.response.data &&\r\n          err.response.status !== 404 &&\r\n          err.response.data.error_msg\r\n          ? err.response.data.error_msg\r\n          : [\"Oops, une erreur inattendue s'est produite\"]\r\n      )\r\n    );\r\n\r\n    dispatch(setLoadingPartial(false));\r\n  }\r\n};\r\n\r\nexport const updateProcess = (formData) => async (dispatch) => {\r\n  try {\r\n    const updatedProcessRes = await axios.patch(\r\n      `/api/processes/edit_process/${formData.processId}`,\r\n      { description: formData.description, title: formData.title },\r\n      config\r\n    );\r\n\r\n    return {\r\n      success: true,\r\n      updatedProcess: updatedProcessRes.data.updatedProcess,\r\n    };\r\n  } catch (err) {\r\n    dispatch(\r\n      setErrorMsgs(\r\n        err.response &&\r\n          err.response.data &&\r\n          err.response.status !== 404 &&\r\n          err.response.data.error_msg\r\n          ? err.response.data.error_msg\r\n          : [\"Oops, une erreur inattendue s'est produite\"]\r\n      )\r\n    );\r\n\r\n    return {\r\n      success: false,\r\n      error_msg: err.response.error_msg,\r\n    };\r\n  }\r\n};\r\n\r\nexport const createProcess = (formData) => async (dispatch) => {\r\n  try {\r\n    dispatch(setLoading(true));\r\n\r\n    const createProcessRes = await axios.post(\r\n      \"/api/processes/new_process\",\r\n      formData,\r\n      config\r\n    );\r\n\r\n    dispatch({ type: ADD_PROCESS, payload: createProcessRes.data });\r\n\r\n    dispatch(setLoading(false));\r\n  } catch (err) {\r\n    dispatch(\r\n      setErrorMsgs(\r\n        err.response &&\r\n          err.response.data &&\r\n          err.response.status !== 404 &&\r\n          err.response.data.error_msg\r\n          ? err.response.data.error_msg\r\n          : [\"Oops, une erreur inattendue s'est produite\"]\r\n      )\r\n    );\r\n\r\n    dispatch(setLoading(false));\r\n  }\r\n};\r\n\r\n/////////////////\r\n// TASKS\r\n/////////////////\r\n\r\n// Load user's tasks\r\nexport const loadUserTasks = () => async (dispatch) => {\r\n  try {\r\n    dispatch(setLoadingPartial(true));\r\n\r\n    const loadTasksRes = await axios.get(\"/api/tasks/get_all_tasks\");\r\n\r\n    const tasks = loadTasksRes.data.tasks;\r\n    const msg = loadTasksRes.data.msg;\r\n\r\n    dispatch({ type: LOAD_TASKS, payload: { tasks, msg } });\r\n\r\n    dispatch(setLoadingPartial(false));\r\n  } catch (err) {\r\n    dispatch(\r\n      setErrorMsgs(\r\n        err.response &&\r\n          err.response.data &&\r\n          err.response.status !== 404 &&\r\n          err.response.data.error_msg\r\n          ? err.response.data.error_msg\r\n          : [\"Oops, une erreur inattendue s'est produite\"]\r\n      )\r\n    );\r\n\r\n    dispatch(setLoadingPartial(false));\r\n  }\r\n};\r\n\r\nexport const addNewTask = (formData) => async (dispatch) => {\r\n  try {\r\n    dispatch(setLoadingPartial(true));\r\n\r\n    const newTaskRes = await axios.post(\r\n      \"/api/tasks/new_task_simple\",\r\n      formData,\r\n      config\r\n    );\r\n\r\n    dispatch({ type: NEW_TASK_ADDED, payload: newTaskRes.data });\r\n\r\n    dispatch(setLoadingPartial(false));\r\n  } catch (err) {\r\n    dispatch(\r\n      setErrorMsgs(\r\n        err.response &&\r\n          err.response.data &&\r\n          err.response.status !== 404 &&\r\n          err.response.data.error_msg\r\n          ? err.response.data.error_msg\r\n          : [\"Oops, une erreur inattendue s'est produite\"]\r\n      )\r\n    );\r\n\r\n    dispatch(setLoadingPartial(false));\r\n  }\r\n};\r\n\r\nexport const deleteTaskAndSubtasks =\r\n  (idToDelete, isForDetail) => async (dispatch) => {\r\n    try {\r\n      dispatch(setLoadingPartial(true));\r\n\r\n      const taksToDelete = await axios.delete(\r\n        `/api/tasks/delete_task/${idToDelete}`,\r\n        config\r\n      );\r\n\r\n      dispatch({ type: DELETE_TASK, payload: taksToDelete.data });\r\n\r\n      dispatch(setLoadingPartial(false));\r\n\r\n      if (isForDetail) {\r\n        return { success: true };\r\n      }\r\n    } catch (err) {\r\n      dispatch(\r\n        setErrorMsgs(\r\n          err.response &&\r\n            err.response.data &&\r\n            err.response.status !== 404 &&\r\n            err.response.data.error_msg\r\n            ? err.response.data.error_msg\r\n            : [\"Oops, une erreur inattendue s'est produite\"]\r\n        )\r\n      );\r\n\r\n      dispatch(setLoadingPartial(false));\r\n    }\r\n  };\r\n\r\nexport const finishTask =\r\n  (idToFinish, isForDetail = false) =>\r\n  async (dispatch) => {\r\n    try {\r\n      dispatch(setLoadingPartial(true));\r\n\r\n      const taskToFinish = await axios.patch(\r\n        `/api/tasks/finish_task/${idToFinish}`,\r\n        config\r\n      );\r\n\r\n      dispatch({ type: FINISH_TASK, payload: taskToFinish.data });\r\n\r\n      dispatch(setLoadingPartial(false));\r\n\r\n      if (isForDetail) {\r\n        return taskToFinish.data;\r\n      }\r\n    } catch (err) {\r\n      dispatch(\r\n        setErrorMsgs(\r\n          err.response &&\r\n            err.response.data &&\r\n            err.response.status !== 404 &&\r\n            err.response.data.error_msg\r\n            ? err.response.data.error_msg\r\n            : [\"Oops, une erreur inattendue s'est produite\"]\r\n        )\r\n      );\r\n\r\n      dispatch(setLoadingPartial(false));\r\n    }\r\n  };\r\n\r\nexport const unfinishTask =\r\n  (idToUnfinish, isForDetail = false) =>\r\n  async (dispatch) => {\r\n    try {\r\n      dispatch(setLoadingPartial(true));\r\n\r\n      const taskToUnfinish = await axios.patch(\r\n        `/api/tasks/unfinish_task/${idToUnfinish}`,\r\n        config\r\n      );\r\n\r\n      dispatch({ type: UNFINISH_TASK, payload: taskToUnfinish.data });\r\n\r\n      dispatch(setLoadingPartial(false));\r\n\r\n      if (isForDetail) {\r\n        return taskToUnfinish.data;\r\n      }\r\n    } catch (err) {\r\n      dispatch(\r\n        setErrorMsgs(\r\n          err.response &&\r\n            err.response.data &&\r\n            err.response.status !== 404 &&\r\n            err.response.data.error_msg\r\n            ? err.response.data.error_msg\r\n            : [\"Oops, une erreur inattendue s'est produite\"]\r\n        )\r\n      );\r\n\r\n      dispatch(setLoadingPartial(false));\r\n    }\r\n  };\r\n\r\nexport const updateTask =\r\n  (formData, isForDetail = false) =>\r\n  async (dispatch) => {\r\n    try {\r\n      dispatch(setLoadingPartial(true));\r\n      const { taskToUpdateId } = formData;\r\n\r\n      const updatedTaskRes = await axios.patch(\r\n        `/api/tasks/edit_task_simple/${taskToUpdateId}`,\r\n        formData,\r\n        config\r\n      );\r\n\r\n      dispatch({ type: UPDATE_TASk, payload: updatedTaskRes.data });\r\n\r\n      dispatch(setLoadingPartial(false));\r\n\r\n      if (isForDetail) {\r\n        return updatedTaskRes.data;\r\n      }\r\n    } catch (err) {\r\n      dispatch(\r\n        setErrorMsgs(\r\n          err.response &&\r\n            err.response.data &&\r\n            err.response.status !== 404 &&\r\n            err.response.data.error_msg\r\n            ? err.response.data.error_msg\r\n            : [\"Oops, une erreur inattendue s'est produite\"]\r\n        )\r\n      );\r\n\r\n      dispatch(setLoadingPartial(false));\r\n    }\r\n  };\r\n\r\nexport const addSubtask = (formData, motherTaskId) => async (dispatch) => {\r\n  try {\r\n    dispatch(setLoading(true));\r\n\r\n    const newSubtaskRes = await axios.post(\r\n      `/api/tasks/add_subtask_to_task/${motherTaskId}`,\r\n      formData,\r\n      config\r\n    );\r\n\r\n    dispatch({ type: ADD_SUBTASK, payload: newSubtaskRes.data });\r\n\r\n    dispatch(setLoading(false));\r\n\r\n    return newSubtaskRes;\r\n  } catch (err) {\r\n    dispatch(\r\n      setErrorMsgs(\r\n        err.response &&\r\n          err.response.data &&\r\n          err.response.status !== 404 &&\r\n          err.response.data.error_msg\r\n          ? err.response.data.error_msg\r\n          : [\"Oops, une erreur inattendue s'est produite\"]\r\n      )\r\n    );\r\n\r\n    dispatch(setLoading(false));\r\n  }\r\n};\r\n\r\nexport const deleteSubtask = (idToDelete) => async (dispatch) => {\r\n  try {\r\n    dispatch(setLoadingPartial(true));\r\n\r\n    const subtakToDelete = await axios.delete(\r\n      `/api/tasks/delete_subtask/${idToDelete}`,\r\n      config\r\n    );\r\n\r\n    dispatch({ type: DELETE_SUBTASK, payload: subtakToDelete.data });\r\n\r\n    dispatch(setLoadingPartial(false));\r\n\r\n    return { success: true, msg: subtakToDelete.data.msg };\r\n  } catch (err) {\r\n    dispatch(\r\n      setErrorMsgs(\r\n        err.response &&\r\n          err.response.data &&\r\n          err.response.status !== 404 &&\r\n          err.response.data.error_msg\r\n          ? err.response.data.error_msg\r\n          : [\"Oops, une erreur inattendue s'est produite\"]\r\n      )\r\n    );\r\n\r\n    dispatch(setLoadingPartial(false));\r\n\r\n    return { success: false, error_msg: err.response.data.error_msg };\r\n  }\r\n};\r\n\r\nexport const finishSubtask = (idToFinish, motherTaskId) => async (dispatch) => {\r\n  try {\r\n    const subtaskToFinish = await axios.patch(\r\n      `/api/tasks/finish_subtask/${idToFinish}`,\r\n      config\r\n    );\r\n\r\n    return {\r\n      success: true,\r\n      msg: subtaskToFinish.data.msg,\r\n      finishedSubtask: subtaskToFinish.data.finishedSubtask,\r\n    };\r\n  } catch (err) {\r\n    dispatch(\r\n      setErrorMsgs(\r\n        err.response &&\r\n          err.response.data &&\r\n          err.response.status !== 404 &&\r\n          err.response.data.error_msg\r\n          ? err.response.data.error_msg\r\n          : [\"Oops, une erreur inattendue s'est produite\"]\r\n      )\r\n    );\r\n\r\n    dispatch(setLoadingPartial(false));\r\n    return { success: false, error_msg: err.response.data.error_msg };\r\n  }\r\n};\r\n\r\nexport const unfinishSubtask = (idToUnfinish) => async (dispatch) => {\r\n  try {\r\n    const subtaskToUnfinish = await axios.patch(\r\n      `/api/tasks/unfinish_subtask/${idToUnfinish}`,\r\n      config\r\n    );\r\n\r\n    return {\r\n      success: true,\r\n      msg: subtaskToUnfinish.data.msg,\r\n      unfinishedSubtask: subtaskToUnfinish.data.unfinishedSubtask,\r\n    };\r\n  } catch (err) {\r\n    dispatch(setLoadingPartial(false));\r\n    return { success: false, error_msg: err.response.data.error_msg };\r\n  }\r\n};\r\n\r\n/////////////////\r\n// COLLECTIONS\r\n/////////////////\r\n\r\n// Load user's collections\r\nexport const loadUserCollections = () => async (dispatch) => {\r\n  try {\r\n    dispatch(setLoadingPartial(true));\r\n\r\n    const loadCollectionsRes = await axios.get(\r\n      \"/api/collections/get_all_collections\"\r\n    );\r\n\r\n    const collections = loadCollectionsRes.data.collections;\r\n    const msg = loadCollectionsRes.data.msg;\r\n\r\n    dispatch({ type: LOAD_COLLECTIONS, payload: { collections, msg } });\r\n\r\n    dispatch(setLoadingPartial(false));\r\n  } catch (err) {\r\n    dispatch(\r\n      setErrorMsgs(\r\n        err.response &&\r\n          err.response.data &&\r\n          err.response.status !== 404 &&\r\n          err.response.data.error_msg\r\n          ? err.response.data.error_msg\r\n          : [\"Oops, une erreur inattendue s'est produite\"]\r\n      )\r\n    );\r\n\r\n    dispatch(setLoadingPartial(false));\r\n  }\r\n};\r\n\r\nexport const createCollection = (formData) => async (dispatch) => {\r\n  try {\r\n    dispatch(setLoadingPartial(true));\r\n\r\n    const newCollectionRes = await axios.post(\r\n      \"/api/collections/create_collection\",\r\n      formData,\r\n      config\r\n    );\r\n\r\n    dispatch({ type: ADD_NEW_COLLECTION, payload: newCollectionRes.data });\r\n\r\n    dispatch(setLoadingPartial(false));\r\n  } catch (err) {\r\n    dispatch(\r\n      setErrorMsgs(\r\n        err.response &&\r\n          err.response.data &&\r\n          err.response.status !== 404 &&\r\n          err.response.data.error_msg\r\n          ? err.response.data.error_msg\r\n          : [\"Oops, une erreur inattendue s'est produite\"]\r\n      )\r\n    );\r\n\r\n    dispatch(setLoadingPartial(false));\r\n  }\r\n};\r\n\r\nexport const removeFromCollection = (updatedCollection) => (dispatch) => {\r\n  dispatch({ type: REMOVE_FROM_COLLECTION, payload: updatedCollection });\r\n};\r\n\r\nexport const addToCollection = (updatedCollection) => (dispatch) => {\r\n  dispatch({ type: ADD_TO_COLLECTION, payload: updatedCollection });\r\n};\r\n\r\n// MESSAGES\r\nexport const setErrorMsgs = (error_msgs) => (dispatch) => {\r\n  dispatch({ type: SET_ERROR_MSGS, payload: [...error_msgs] });\r\n};\r\n\r\nexport const deleteIndividualErrorMsg = (error_msg_id) => (dispatch) => {\r\n  dispatch({ type: DELETE_INDIVIDUAL_ERROR_MSG, payload: error_msg_id });\r\n};\r\n\r\nexport const deleteAllErrorMsg = () => (dispatch) => {\r\n  dispatch({ type: DELETE_ALL_ERROR_MSG });\r\n};\r\n\r\nexport const setMessages = (messages) => (dispatch) => {\r\n  dispatch({ type: SET_MESSAGES, payload: messages });\r\n};\r\n\r\nexport const deleteIndividualMessage = (message_key) => (dispatch) => {\r\n  dispatch({ type: DELETE_INDIVIDUAL_MSG, payload: message_key });\r\n};\r\n\r\nexport const deleteAllMessages = () => (dispatch) => {\r\n  dispatch({ type: DELETE_ALL_MSG });\r\n};\r\n","export const SET_LOADING = \"SET_LOADING\";\r\nexport const SET_LOADING_PARTIAL = \"SET_LOADING_PARTIAL\";\r\n\r\n// ERRORS AND MESSAGES\r\nexport const SET_ERROR_MSGS = \"SET_ERROR_MSGS\";\r\nexport const DELETE_INDIVIDUAL_ERROR_MSG = \"DELETE_INDIVIDUAL_ERROR_MSG\";\r\nexport const DELETE_ALL_ERROR_MSG = \"DELETE_ALL_ERROR_MSG\";\r\nexport const SET_MESSAGES = \"SET_MESSAGES\";\r\nexport const DELETE_INDIVIDUAL_MSG = \"DELETE_INDIVIDUAL_MSG\";\r\nexport const DELETE_ALL_MSG = \"DELETE_ALL_MSG\";\r\n\r\n// USERS\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGOUT = \"LOGOUT\";\r\nexport const AUTH_ERROR = \"AUTH_ERROR\";\r\n\r\n// MAIN\r\nexport const LOAD_TASKS = \"LOAD_TASKS\";\r\nexport const LOAD_PROCESSES = \"LOAD_PROCESSES\";\r\nexport const LOAD_NOTES = \"LOAD_NOTES\";\r\nexport const LOAD_COLLECTIONS = \"LOAD_COLLECTIONS\";\r\nexport const CHANGE_MODE = \"CHANGE_MODE\";\r\n\r\n// TASKS\r\nexport const NEW_TASK_ADDED = \"NEW_TASK_ADDED\";\r\nexport const DELETE_TASK = \"DELETE_TASK\";\r\nexport const UPDATE_TASk = \"UPDATE_TASk\";\r\nexport const FINISH_TASK = \"FINISH_TASK\";\r\nexport const UNFINISH_TASK = \"UNFINISH_TASK\";\r\n// SUBTASKS\r\nexport const NEW_SUBTASK_ADDED = \"NEW_SUBTASK_ADDED\";\r\nexport const ADD_SUBTASK = \"ADD_SUBTASK\";\r\nexport const DELETE_SUBTASK = \"DELETE_SUBTASK\";\r\n\r\n// NOTES\r\nexport const UPDATE_NOTE = \"UPDATE_NOTE\";\r\nexport const DELETE_NOTE = \"DELETE_NOTE\";\r\nexport const ADD_NOTE = \"ADD_NOTE\";\r\n\r\n// PROCESSES\r\nexport const ADD_PROCESS = \"ADD_PROCESS\";\r\nexport const DELETE_PROCESS = \"DELETE_PROCESS\";\r\nexport const UPDATE_PROCESS = \"UPDATE_PROCESS\";\r\n\r\n// COLLECTIONS\r\nexport const ADD_NEW_COLLECTION = \"ADD_NEW_COLLECTION\";\r\nexport const ADD_TO_COLLECTION = \"ADD_TO_COLLECTION\";\r\nexport const REMOVE_FROM_COLLECTION = \"REMOVE_FROM_COLLECTION\";\r\n","import React from \"react\";\r\n\r\nconst MainLoading = () => {\r\n  return (\r\n    <div className='mt-5'>\r\n      <progress className='progress is-large is-info mt-5' max='100'>\r\n        60%\r\n      </progress>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainLoading;\r\n","import React, { useState } from \"react\";\r\n\r\nimport { useDispatch } from \"react-redux\";\r\nimport { logout, changeMode } from \"../../actions/userActions\";\r\n\r\nconst Navbar = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [isActive, setisActive] = useState(false);\r\n\r\n  const logOut = () => {\r\n    dispatch(logout());\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <nav\r\n        className='navbar is-info'\r\n        role='navigation'\r\n        aria-label='main navigation'\r\n      >\r\n        <div className='navbar-brand'>\r\n          <a\r\n            onClick={() => {\r\n              setisActive(!isActive);\r\n            }}\r\n            role='button'\r\n            className={`navbar-burger burger ${isActive ? \"is-active\" : \"\"}`}\r\n            aria-label='menu'\r\n            aria-expanded='false'\r\n            data-target='navbarBasicExample'\r\n          >\r\n            <span aria-hidden='true'></span>\r\n            <span aria-hidden='true'></span>\r\n            <span aria-hidden='true'></span>\r\n          </a>\r\n        </div>\r\n\r\n        <div\r\n          id='navMenu'\r\n          className={`navbar-menu ${isActive ? \"is-active\" : \"\"}`}\r\n        >\r\n          <div className='navbar-start'>\r\n            <a\r\n              className='navbar-item'\r\n              onClick={() => {\r\n                dispatch(changeMode(\"TASKS\"));\r\n              }}\r\n            >\r\n              Mes Tâches\r\n            </a>\r\n\r\n            <a\r\n              className='navbar-item'\r\n              onClick={() => {\r\n                dispatch(changeMode(\"NOTES\"));\r\n              }}\r\n            >\r\n              Mes Notes\r\n            </a>\r\n\r\n            <a\r\n              className='navbar-item'\r\n              onClick={() => {\r\n                dispatch(changeMode(\"PROCESSES\"));\r\n              }}\r\n            >\r\n              Mes Processus\r\n            </a>\r\n\r\n            <a\r\n              className='navbar-item'\r\n              onClick={() => {\r\n                dispatch(changeMode(\"COLLECTIONS\"));\r\n              }}\r\n            >\r\n              Mes Collections\r\n            </a>\r\n          </div>\r\n\r\n          <div className='navbar-end'>\r\n            <div className='navbar-item'>\r\n              <div className='buttons'>\r\n                <a className='button is-dark' onClick={logOut}>\r\n                  Déconnexion\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React, { useState } from \"react\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst IndividualNote = (props) => {\r\n  const { note } = { ...props };\r\n\r\n  const contractText = (txt) => {\r\n    if (txt.length > 150) {\r\n      return txt.slice(0, 146) + \"...\";\r\n    } else {\r\n      return txt;\r\n    }\r\n  };\r\n\r\n  const [showFullText, setShowFullText] = useState(false);\r\n\r\n  return (\r\n    <div className='box'>\r\n      <div className='content'>\r\n        <p>{showFullText ? note.content : contractText(note.content)}</p>\r\n\r\n        {note.content.length > 150 && (\r\n          <button\r\n            className='button is-info is-small'\r\n            onClick={() => {\r\n              setShowFullText(!showFullText);\r\n            }}\r\n          >\r\n            {showFullText ? \"Réduire\" : \"Développer\"}\r\n          </button>\r\n        )}\r\n\r\n        <Link className='has-text-weight-medium ml-2' to={`/note/${note._id}`}>\r\n          Voir\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IndividualNote;\r\n","import React from \"react\";\r\n\r\nconst PartialLoading = () => {\r\n  return (\r\n    <div className='mt-5'>\r\n      <progress className='progress is-large is-info mt-5' max='100'>\r\n        60%\r\n      </progress>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PartialLoading;\r\n","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  loadUserNotes,\r\n  createNote,\r\n  setErrorMsgs,\r\n} from \"./../../actions/userActions\";\r\nimport IndividualNote from \"./IndividualNote\";\r\nimport PartialLoading from \"./PartialLoading\";\r\n\r\nconst NotesMode = () => {\r\n  const { loading_partial, notes } = useSelector((state) => state.user);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [showNewNoteForm, setShowNewNoteForm] = useState(false);\r\n  const [newNoteContent, setNewNoteContent] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    dispatch(loadUserNotes());\r\n  }, []);\r\n\r\n  const handleNewNoteSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      dispatch(createNote({ content: newNoteContent }));\r\n    } catch (err) {\r\n      dispatch(setErrorMsgs([err.response.data.error_msg]));\r\n    } finally {\r\n      setShowNewNoteForm(false);\r\n      setNewNoteContent(\"\");\r\n    }\r\n  };\r\n\r\n  const handleNewNoteContent = (event) => {\r\n    setNewNoteContent(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className='columns is-mobile'>\r\n      <div className='column is-three-fifths is-offset-one-fifth'>\r\n        {loading_partial ? (\r\n          <PartialLoading />\r\n        ) : (\r\n          <Fragment>\r\n            <div className='block'>\r\n              {showNewNoteForm ? (\r\n                <div className='block'>\r\n                  <form onSubmit={handleNewNoteSubmit}>\r\n                    <div className='field'>\r\n                      <label className='label'>Nouvelle note</label>\r\n\r\n                      <p className='control'>\r\n                        <textarea\r\n                          className='textarea is-info'\r\n                          onChange={handleNewNoteContent}\r\n                          value={newNoteContent}\r\n                          placeholder='Contenu'\r\n                          name='content'\r\n                        ></textarea>\r\n                      </p>\r\n                    </div>\r\n\r\n                    <div className='buttons'>\r\n                      <button className='button is-small is-info' type='submit'>\r\n                        Ajouter\r\n                      </button>\r\n\r\n                      <button\r\n                        className='button is-small is-warning'\r\n                        onClick={() => {\r\n                          setShowNewNoteForm(false);\r\n                        }}\r\n                      >\r\n                        Annuler\r\n                      </button>\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n              ) : (\r\n                <div className='block'>\r\n                  <button\r\n                    className='button is-medium is-info mt-5'\r\n                    onClick={() => {\r\n                      setShowNewNoteForm(true);\r\n                    }}\r\n                  >\r\n                    Ajouter une note\r\n                  </button>\r\n                </div>\r\n              )}\r\n\r\n              <div className='block'>\r\n                {notes && notes.length > 0 ? (\r\n                  notes.map((note) => {\r\n                    return <IndividualNote key={uuidv4()} note={note} />;\r\n                  })\r\n                ) : (\r\n                  <div>\r\n                    <p className='is-size-3'>Aucune note chargée</p>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </Fragment>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotesMode;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst IndividualProcess = (props) => {\r\n  const { process } = { ...props };\r\n\r\n  return (\r\n    <Link\r\n      to={`/process/${process._id}`}\r\n      className='box has-background-info-light'\r\n    >\r\n      <div>\r\n        <h4>{process.title}</h4>\r\n        <p>\r\n          {process.steps.length} étape{process.steps.length > 1 && \"s\"}\r\n        </p>\r\n      </div>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default IndividualProcess;\r\n","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  loadUserProcesses,\r\n  createProcess,\r\n  setErrorMsgs,\r\n} from \"./../../actions/userActions\";\r\nimport IndividualProcess from \"./IndividualProcess\";\r\nimport PartialLoading from \"./PartialLoading\";\r\n\r\nconst ProcessesMode = () => {\r\n  const { loading_partial, processes } = useSelector((state) => state.user);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [showNewProcessForm, setShowNewProcessForm] = useState(false);\r\n  const [newProcess, setNewProcess] = useState({\r\n    title: \"\",\r\n    description: \"\",\r\n  });\r\n\r\n  const handleNewProcessChange = (event) => {\r\n    setNewProcess({\r\n      ...newProcess,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const handleNewProcessFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      dispatch(\r\n        createProcess({\r\n          title: newProcess.title,\r\n          description: newProcess.description,\r\n        })\r\n      );\r\n    } catch (err) {\r\n      dispatch(setErrorMsgs([err.response.data.error_msg]));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(loadUserProcesses());\r\n  }, []);\r\n\r\n  return (\r\n    <div className='columns is-mobile'>\r\n      <div className='column is-three-fifths is-offset-one-fifth'>\r\n        {loading_partial ? (\r\n          <PartialLoading />\r\n        ) : (\r\n          <Fragment>\r\n            <div className='block mt-5'>\r\n              {showNewProcessForm ? (\r\n                <div className='block'>\r\n                  <form className='my-5' onSubmit={handleNewProcessFormSubmit}>\r\n                    <div className='field'>\r\n                      <label className='label'>Titre</label>\r\n\r\n                      <p className='control'>\r\n                        <input\r\n                          className='input is-info'\r\n                          type='text'\r\n                          name='title'\r\n                          onChange={handleNewProcessChange}\r\n                          placeholder='Titre...'\r\n                          value={newProcess.title}\r\n                        />\r\n                      </p>\r\n                    </div>\r\n\r\n                    <div className='field'>\r\n                      <label className='label'>Description</label>\r\n\r\n                      <p className='control'>\r\n                        <textarea\r\n                          className='textarea is-info'\r\n                          onChange={handleNewProcessChange}\r\n                          placeholder='Description...'\r\n                          name='description'\r\n                          value={newProcess.description}\r\n                        ></textarea>\r\n                      </p>\r\n                    </div>\r\n\r\n                    <div className='field is-grouped'>\r\n                      <div className='control'>\r\n                        <button type='submit' className='button is-info'>\r\n                          Créer\r\n                        </button>\r\n                      </div>\r\n\r\n                      <div className='control'>\r\n                        <button\r\n                          onClick={() => {\r\n                            setShowNewProcessForm(false);\r\n                          }}\r\n                          className='button is-warning'\r\n                        >\r\n                          Annuler\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n              ) : (\r\n                <div className='block'>\r\n                  <button\r\n                    className='button is-medium is-info '\r\n                    onClick={() => {\r\n                      setShowNewProcessForm(true);\r\n                    }}\r\n                  >\r\n                    Créer un processus\r\n                  </button>\r\n                </div>\r\n              )}\r\n\r\n              <div>\r\n                {processes && processes.length > 0 ? (\r\n                  processes.map((process) => {\r\n                    return (\r\n                      <IndividualProcess key={uuidv4()} process={process} />\r\n                    );\r\n                  })\r\n                ) : (\r\n                  <div>\r\n                    <p className='is-size-3'>Aucun processus chargé</p>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </Fragment>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProcessesMode;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport Moment from \"react-moment\";\r\nimport \"moment-timezone\";\r\nimport \"moment/locale/fr\";\r\n\r\nconst TaskTimeTable = (props) => {\r\n  const { limitDate } = props;\r\n\r\n  const [delayToDisplay, setDelayToDisplay] = useState(\"\");\r\n  const [colorForDelayToDisplay, setColorForDelayToDisplay] =\r\n    useState(\"has-text-black\");\r\n\r\n  useEffect(() => {\r\n    const treatLimitDate = () => {\r\n      const currentDate = new Date();\r\n\r\n      const dateToCheck = new Date(limitDate);\r\n\r\n      let currentDateOvermorrowMax = new Date(\r\n        currentDate.getFullYear(),\r\n        currentDate.getMonth(),\r\n        currentDate.getDate() + 2,\r\n        23,\r\n        59,\r\n        59\r\n      );\r\n\r\n      if (currentDate > dateToCheck) {\r\n        setDelayToDisplay(\"Date limite dépassée - \");\r\n        setColorForDelayToDisplay(\"has-text-danger\");\r\n      } else {\r\n        if (\r\n          currentDate < dateToCheck &&\r\n          dateToCheck < currentDateOvermorrowMax\r\n        ) {\r\n          setDelayToDisplay(\"Tâche urgente - \");\r\n          setColorForDelayToDisplay(\"has-text-primary\");\r\n        }\r\n      }\r\n    };\r\n\r\n    treatLimitDate();\r\n  }, []);\r\n\r\n  return (\r\n    <div className='block is-size-7'>\r\n      <p className={colorForDelayToDisplay}>\r\n        {delayToDisplay} <Moment locale='fr' date={limitDate} format='LLLL' />\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskTimeTable;\r\n","import React, { useState, Fragment } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport TaskTimeTable from \"./TaskTimeTable\";\r\n\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  deleteTaskAndSubtasks,\r\n  unfinishTask,\r\n  finishTask,\r\n  updateTask,\r\n} from \"./../../actions/userActions\";\r\n\r\nconst IndividualTask = (props) => {\r\n  const { task } = { ...props };\r\n  const dispatch = useDispatch();\r\n\r\n  const [isBeingUpdated, setIsBeingUpdated] = useState(false);\r\n  const [updatedTaskContent, setUpdatedTaskContent] = useState(task.content);\r\n  const [updatedTaskLimitDate, setUpdatedTaskLimitDate] = useState(\r\n    task.limitDate ? new Date(task.limitDate) : null\r\n  );\r\n\r\n  const handleTaskUpdate = (event) => {\r\n    event.preventDefault();\r\n\r\n    dispatch(\r\n      updateTask({\r\n        limitDate: updatedTaskLimitDate,\r\n        content: updatedTaskContent,\r\n        taskToUpdateId: task._id,\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleUpdatedTaskContent = (event) => {\r\n    setUpdatedTaskContent(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className='box'>\r\n      {isBeingUpdated ? (\r\n        <div>\r\n          <form onSubmit={handleTaskUpdate}>\r\n            <div className='field'>\r\n              <label htmlFor='content'>Contenu</label>\r\n\r\n              <p className='control'>\r\n                <textarea\r\n                  className='textarea is-info'\r\n                  type='text'\r\n                  name='content'\r\n                  placeholder='Contenu'\r\n                  value={updatedTaskContent}\r\n                  onChange={handleUpdatedTaskContent}\r\n                  required\r\n                ></textarea>\r\n              </p>\r\n            </div>\r\n\r\n            <div className='field'>\r\n              <DatePicker\r\n                locale='fr'\r\n                selected={updatedTaskLimitDate}\r\n                onChange={(date) => setUpdatedTaskLimitDate(date)}\r\n                dateFormatCalendar={\"MMM yyyy\"}\r\n                showMonthDropdown\r\n                useFullMonthInDropdown\r\n                closeOnScroll={true}\r\n                isClearable\r\n                placeholderText='Date limite'\r\n                dateFormat='dd/MM/yyyy HH:mm'\r\n                className='blue-border input control is-info'\r\n                showTimeInput\r\n              />\r\n            </div>\r\n\r\n            <div className='buttons'>\r\n              <button className='button is-small is-info' type='submit'>\r\n                Modifier\r\n              </button>\r\n\r\n              <button\r\n                className='button is-small is-warning'\r\n                onClick={() => {\r\n                  setIsBeingUpdated(false);\r\n                }}\r\n              >\r\n                Annuler\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      ) : (\r\n        <Fragment>\r\n          <div className='block'>\r\n            {task.limitDate && <TaskTimeTable limitDate={task.limitDate} />}\r\n          </div>\r\n\r\n          <div className='block'>\r\n            <div className='content'>\r\n              <Link to={`/task/${task._id}`}>\r\n                <p>\r\n                  {task.content} <span>{task.isCompositeTask && \" (+)\"}</span>\r\n                </p>\r\n              </Link>\r\n            </div>\r\n\r\n            <div className='buttons'>\r\n              {task.isDone ? (\r\n                <button\r\n                  className='button is-small is-primary'\r\n                  onClick={() => {\r\n                    dispatch(unfinishTask(task._id));\r\n                  }}\r\n                >\r\n                  Terminée\r\n                </button>\r\n              ) : (\r\n                <button\r\n                  className='button is-small is-info'\r\n                  onClick={() => {\r\n                    dispatch(finishTask(task._id));\r\n                  }}\r\n                >\r\n                  En cours\r\n                </button>\r\n              )}\r\n\r\n              {!task.isDone && (\r\n                <button\r\n                  className='button is-small is-warning'\r\n                  onClick={() => {\r\n                    setIsBeingUpdated(true);\r\n                  }}\r\n                >\r\n                  Modifier\r\n                </button>\r\n              )}\r\n\r\n              <button\r\n                className='button is-small is-danger'\r\n                onClick={() => {\r\n                  dispatch(deleteTaskAndSubtasks(task._id));\r\n                }}\r\n              >\r\n                Supprimer\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </Fragment>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IndividualTask;\r\n","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nimport DatePicker, { registerLocale } from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport fr from \"date-fns/locale/fr\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  loadUserTasks,\r\n  addNewTask,\r\n  setErrorMsgs,\r\n} from \"./../../actions/userActions\";\r\nimport IndividualTask from \"./IndividualTask\";\r\nimport PartialLoading from \"./PartialLoading\";\r\n\r\nconst TasksMode = () => {\r\n  const { loading_partial, tasks } = useSelector((state) => state.user);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [showNewTaskForm, setShowNewTaskForm] = useState(false);\r\n  const [newTaskContent, setNewTaskContent] = useState(\"\");\r\n  const [newTaskLimitDate, setNewTaskLimitDate] = useState(null);\r\n\r\n  registerLocale(\"fr\", fr);\r\n\r\n  useEffect(() => {\r\n    dispatch(loadUserTasks());\r\n  }, []);\r\n\r\n  const handleNewTaskContent = (event) => {\r\n    setNewTaskContent(event.target.value);\r\n  };\r\n\r\n  const handleNewTaskFormSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    // validation\r\n    if (newTaskContent.length > 280) {\r\n      dispatch(\r\n        setErrorMsgs(\"Le contenu ne peut comporter plus de 280 caractères\")\r\n      );\r\n    }\r\n\r\n    if (newTaskContent.length < 3) {\r\n      dispatch(setErrorMsgs(\"Le contenu doit comporter au moins 3 caractères\"));\r\n    }\r\n\r\n    dispatch(\r\n      addNewTask({ content: newTaskContent, limitDate: newTaskLimitDate })\r\n    );\r\n\r\n    setShowNewTaskForm(false);\r\n    setNewTaskContent(\"\");\r\n    setNewTaskLimitDate();\r\n  };\r\n\r\n  return (\r\n    <div className='columns'>\r\n      <div className='column is-three-fifths is-offset-one-fifth'>\r\n        {loading_partial ? (\r\n          <PartialLoading />\r\n        ) : (\r\n          <Fragment>\r\n            <div className='block'>\r\n              {showNewTaskForm ? (\r\n                <div className='block'>\r\n                  <form className='my-5' onSubmit={handleNewTaskFormSubmit}>\r\n                    <div className='field'>\r\n                      <label className='label'>Nouvelle tâche:</label>\r\n\r\n                      <p className='control'>\r\n                        <textarea\r\n                          className='textarea is-info'\r\n                          type='text'\r\n                          name='content'\r\n                          placeholder='Contenu'\r\n                          value={newTaskContent}\r\n                          onChange={handleNewTaskContent}\r\n                          required\r\n                        ></textarea>\r\n                      </p>\r\n                    </div>\r\n\r\n                    <div className='field'>\r\n                      <DatePicker\r\n                        locale='fr'\r\n                        selected={newTaskLimitDate}\r\n                        onChange={(date) => setNewTaskLimitDate(date)}\r\n                        dateFormatCalendar={\"MMM yyyy\"}\r\n                        showMonthDropdown\r\n                        useFullMonthInDropdown\r\n                        closeOnScroll={true}\r\n                        isClearable\r\n                        placeholderText='Date limite'\r\n                        dateFormat='dd/MM/yyyy'\r\n                        className='blue-border input control is-info'\r\n                        showTimeInput\r\n                      />\r\n                    </div>\r\n\r\n                    <div className='buttons'>\r\n                      <button className='button is-small is-info' type='submit'>\r\n                        Ajouter\r\n                      </button>\r\n\r\n                      <button\r\n                        className='button is-small is-light'\r\n                        onClick={() => {\r\n                          setShowNewTaskForm(false);\r\n                        }}\r\n                      >\r\n                        Annuler\r\n                      </button>\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n              ) : (\r\n                <div className='block'>\r\n                  <button\r\n                    className='button is-medium is-info mt-5'\r\n                    onClick={() => {\r\n                      setShowNewTaskForm(true);\r\n                    }}\r\n                  >\r\n                    Ajouter une tâche\r\n                  </button>\r\n                </div>\r\n              )}\r\n\r\n              <div className='block'>\r\n                {tasks && tasks.length > 0 ? (\r\n                  tasks.map((task) => {\r\n                    return <IndividualTask key={uuidv4()} task={task} />;\r\n                  })\r\n                ) : (\r\n                  <div>\r\n                    <p className='is-size-3'>Aucune tâche chargée</p>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </Fragment>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TasksMode;\r\n","import React from \"react\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst IndividualCollection = (props) => {\r\n  const { collection } = { ...props };\r\n\r\n  return (\r\n    <div className='block my-1 is-size-6'>\r\n      <Link\r\n        className='has-text-weight-medium'\r\n        to={`/collection/${collection._id}`}\r\n      >\r\n        {collection.title}\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IndividualCollection;\r\n","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  setLoading,\r\n  loadUserCollections,\r\n  createCollection,\r\n  setErrorMsgs,\r\n} from \"./../../actions/userActions\";\r\nimport IndividualCollection from \"./IndividualCollection\";\r\nimport PartialLoading from \"./PartialLoading\";\r\n\r\nconst CollectionsMode = () => {\r\n  const { loading_partial, collections } = useSelector((state) => state.user);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(loadUserCollections());\r\n  }, []);\r\n\r\n  const [showNewCollectionForm, setShowNewCollectionForm] = useState(false);\r\n  const [newCollection, setNewCollection] = useState({\r\n    title: \"\",\r\n    description: \"\",\r\n  });\r\n\r\n  const handleNewCollectionChange = (event) => {\r\n    setNewCollection({\r\n      ...newCollection,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const handleNewCollectionSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      dispatch(setLoading(true));\r\n\r\n      dispatch(\r\n        createCollection({\r\n          title: newCollection.title,\r\n          description: newCollection.description,\r\n        })\r\n      );\r\n\r\n      setShowNewCollectionForm(false);\r\n\r\n      setNewCollection({\r\n        title: \"\",\r\n        description: \"\",\r\n      });\r\n\r\n      dispatch(setLoading(false));\r\n    } catch (err) {\r\n      dispatch(setErrorMsgs([err.response.data.error_msg]));\r\n      dispatch(setLoading(false));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='columns is-mobile'>\r\n      <div className='column is-three-fifths is-offset-one-fifth'>\r\n        {loading_partial ? (\r\n          <PartialLoading />\r\n        ) : (\r\n          <Fragment>\r\n            <div className='block'>\r\n              {showNewCollectionForm ? (\r\n                <div className='block'>\r\n                  <form className='my-5' onSubmit={handleNewCollectionSubmit}>\r\n                    <div className='field'>\r\n                      <label className='label'>Titre</label>\r\n\r\n                      <p className='control'>\r\n                        <input\r\n                          className='input is-info'\r\n                          type='text'\r\n                          onChange={handleNewCollectionChange}\r\n                          value={newCollection.title}\r\n                          placeholder='Titre...'\r\n                          name='title'\r\n                        />\r\n                      </p>\r\n                    </div>\r\n\r\n                    <div className='field'>\r\n                      <label className='label'>Description</label>\r\n\r\n                      <p className='control'>\r\n                        <textarea\r\n                          className='textarea is-info'\r\n                          onChange={handleNewCollectionChange}\r\n                          value={newCollection.description}\r\n                          placeholder='Description...'\r\n                          name='description'\r\n                        ></textarea>\r\n                      </p>\r\n                    </div>\r\n\r\n                    <div className='buttons'>\r\n                      <button className='button is-small is-info' type='submit'>\r\n                        Valider\r\n                      </button>\r\n\r\n                      <button\r\n                        className='button is-small is-warning'\r\n                        onClick={() => {\r\n                          setShowNewCollectionForm(false);\r\n                        }}\r\n                      >\r\n                        Annuler\r\n                      </button>\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n              ) : (\r\n                <div className='block'>\r\n                  <button\r\n                    className='button is-medium is-info mt-5'\r\n                    onClick={() => {\r\n                      setShowNewCollectionForm(true);\r\n                    }}\r\n                  >\r\n                    Ajouter une collection\r\n                  </button>\r\n                </div>\r\n              )}\r\n\r\n              <div className='block'>\r\n                {collections && collections.length > 0 ? (\r\n                  collections.map((collection) => {\r\n                    return (\r\n                      <IndividualCollection\r\n                        key={uuidv4()}\r\n                        collection={collection}\r\n                      />\r\n                    );\r\n                  })\r\n                ) : (\r\n                  <div>\r\n                    <p className='is-size-3'>Aucune collection chargée</p>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </Fragment>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CollectionsMode;\r\n","import React from \"react\";\r\n\r\nconst IndividualErrorMsg = (props) => {\r\n  return (\r\n    <div className='notification is-danger is-light'>\r\n      <button className='delete' onClick={props.deleteFunction}></button>\r\n\r\n      <p className='is-small'>{props.error_msg.error_msg}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IndividualErrorMsg;\r\n","import React from \"react\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport IndividualErrorMsg from \"./IndividualErrorMsg\";\r\n\r\nimport {\r\n  deleteIndividualMessage,\r\n  deleteAllMessages,\r\n} from \"./../../actions/userActions\";\r\n\r\nconst MessageBoard = () => {\r\n  const dispatch = useDispatch();\r\n  const { messages } = useSelector((state) => state.user);\r\n\r\n  return (\r\n    <div>\r\n      {messages.length > 0 && (\r\n        <button\r\n          onClick={() => {\r\n            dispatch(deleteAllMessages());\r\n          }}\r\n        >\r\n          Supprimer tous les messages\r\n        </button>\r\n      )}\r\n\r\n      {messages.map((message) => {\r\n        return (\r\n          <IndividualErrorMsg\r\n            key={message._id}\r\n            message={message}\r\n            deleteFunction={() => {\r\n              dispatch(deleteIndividualMessage(message._id));\r\n            }}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MessageBoard;\r\n","import React from \"react\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport IndividualErrorMsg from \"./IndividualErrorMsg\";\r\n\r\nimport {\r\n  deleteIndividualErrorMsg,\r\n  deleteAllErrorMsg,\r\n} from \"./../../actions/userActions\";\r\n\r\nconst ErrorMsgBoard = () => {\r\n  const dispatch = useDispatch();\r\n  const { error_msgs } = useSelector((state) => state.user);\r\n\r\n  return (\r\n    <div className='block'>\r\n      {error_msgs.map((error_msg) => {\r\n        return (\r\n          <IndividualErrorMsg\r\n            key={error_msg._id}\r\n            error_msg={error_msg}\r\n            deleteFunction={() => {\r\n              dispatch(deleteIndividualErrorMsg(error_msg._id));\r\n            }}\r\n          />\r\n        );\r\n      })}\r\n\r\n      {error_msgs.length > 0 && (\r\n        <button\r\n          className='button is-danger is-small'\r\n          onClick={() => {\r\n            dispatch(deleteAllErrorMsg());\r\n          }}\r\n        >\r\n          Supprimer tous les messages d'erreurs\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ErrorMsgBoard;\r\n","import React, { Fragment, useEffect } from \"react\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { setLoading } from \"./../../actions/userActions\";\r\n\r\nimport MainLoading from \"../parts/MainLoading\";\r\nimport Navbar from \"../parts/Navbar\";\r\nimport NotesMode from \"../parts/NotesMode\";\r\nimport ProcessesMode from \"../parts/ProcessesMode\";\r\nimport TasksMode from \"../parts/TasksMode\";\r\nimport CollectionsMode from \"../parts/CollectionsMode\";\r\nimport MessageBoard from \"../parts/MessageBoard\";\r\nimport ErrorMsgBoard from \"../parts/ErrorMsgBoard\";\r\n\r\nconst Home = () => {\r\n  const { loading, mode } = useSelector((state) => state.user);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(setLoading(false));\r\n  }, []);\r\n\r\n  const modeSwitch = (mode) => {\r\n    switch (mode) {\r\n      case \"TASKS\":\r\n        return <TasksMode />;\r\n\r\n      case \"PROCESSES\":\r\n        return <ProcessesMode />;\r\n\r\n      case \"COLLECTIONS\":\r\n        return <CollectionsMode />;\r\n\r\n      case \"NOTES\":\r\n        return <NotesMode />;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {loading ? (\r\n        <MainLoading />\r\n      ) : (\r\n        <Fragment>\r\n          <Navbar />\r\n\r\n          <div className='columns my-0 py-0'>\r\n            <div className='column is-half is-offset-one-quarter'>\r\n              <MessageBoard />\r\n              <ErrorMsgBoard />\r\n            </div>\r\n          </div>\r\n\r\n          {modeSwitch(mode)}\r\n        </Fragment>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport ErrorMsgBoard from \"../parts/ErrorMsgBoard\";\r\nimport MessageBoard from \"../parts/MessageBoard\";\r\n\r\nimport { login, setErrorMsgs } from \"./../../actions/userActions\";\r\n\r\nconst Login = (props) => {\r\n  const { isAuthenticated } = useSelector((state) => state.user);\r\n  const dispatch = useDispatch();\r\n\r\n  const emailIsValid = (email) => {\r\n    return /\\S+@\\S+\\.\\S+/.test(email);\r\n  };\r\n\r\n  // redirect to homepage when authenticated\r\n  useEffect(() => {\r\n    if (isAuthenticated) {\r\n      props.history.push(\"/\");\r\n    }\r\n  }, [isAuthenticated, props.history]);\r\n\r\n  const [user, setUser] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const { email, password } = user;\r\n\r\n  const handleFormChange = (event) => {\r\n    setUser({ ...user, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  const handleFormSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (!email) {\r\n      dispatch(setErrorMsgs([\"Veuillez entrer un email\"]));\r\n    } else if (!emailIsValid(email)) {\r\n      dispatch(setErrorMsgs([\"Cette adresse email est invalide\"]));\r\n    } else if (!password) {\r\n      dispatch(setErrorMsgs([\"Veuillez entrer un mot de passe\"]));\r\n    } else {\r\n      dispatch(\r\n        login({\r\n          email,\r\n          password,\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='columns'>\r\n      <div className='column is-half is-offset-one-quarter'>\r\n        <div className='hero-body'>\r\n          <p className='title'>Bienvenue sur Projet Éléphant</p>\r\n\r\n          <p className='subtitle'>\r\n            <strong>Projet Éléphant</strong> est un site web de démonstration\r\n            par{\" \"}\r\n            <a\r\n              className='has-text-weight-medium has-text-black-bis'\r\n              href='https://audelcroix.com'\r\n            >\r\n              Aurélien Delcroix\r\n            </a>\r\n          </p>\r\n          <p className='subtitle'>Connexion</p>\r\n        </div>\r\n\r\n        <div className='column is-full'>\r\n          <MessageBoard />\r\n          <ErrorMsgBoard />\r\n        </div>\r\n\r\n        <div className='box'>\r\n          <div className='block mt-5'>\r\n            <form onSubmit={handleFormSubmit}>\r\n              <div className='field'>\r\n                <label className='label'>E-Mail</label>\r\n                <p className='control has-icons-left'>\r\n                  <input\r\n                    type='email'\r\n                    name='email'\r\n                    value={email}\r\n                    onChange={handleFormChange}\r\n                    className='input is-medium is-info'\r\n                    id='loginFormEmail'\r\n                    placeholder='E-Mail'\r\n                  />\r\n                  <span className='material-icons icon is-small is-left'>\r\n                    email\r\n                  </span>\r\n                </p>\r\n              </div>\r\n\r\n              <div className='field'>\r\n                <label className='label'>Mot de passe</label>\r\n                <p className='control has-icons-left'>\r\n                  <input\r\n                    type='password'\r\n                    name='password'\r\n                    value={password}\r\n                    onChange={handleFormChange}\r\n                    className='input is-medium is-info'\r\n                    id='loginFormPassword'\r\n                    placeholder='Mot de passe'\r\n                  />\r\n                  <span className='material-icons icon is-small is-left'>\r\n                    lock\r\n                  </span>\r\n                </p>\r\n              </div>\r\n\r\n              <div className='control'>\r\n                <button type='submit' className='button is-link'>\r\n                  Connexion\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n\r\n          <Link to={\"/register\"} className='has-text-weight-medium'>\r\n            Inscription\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { register, setErrorMsgs } from \"./../../actions/userActions\";\r\n\r\nimport ErrorMsgBoard from \"../parts/ErrorMsgBoard\";\r\nimport MessageBoard from \"../parts/MessageBoard\";\r\n\r\nconst Register = (props) => {\r\n  const { isAuthenticated } = useSelector((state) => state.user);\r\n  const dispatch = useDispatch();\r\n\r\n  // redirect to homepage when authenticated\r\n  useEffect(() => {\r\n    if (isAuthenticated) {\r\n      props.history.push(\"/\");\r\n    }\r\n  }, [isAuthenticated, props.history]);\r\n\r\n  const emailIsValid = (email) => {\r\n    return /\\S+@\\S+\\.\\S+/.test(email);\r\n  };\r\n\r\n  const [userToRegister, setUserToRegister] = useState({\r\n    password: \"\",\r\n    passwordConfirm: \"\",\r\n    email: \"\",\r\n  });\r\n\r\n  const handleRegisterFormChange = (event) => {\r\n    setUserToRegister({\r\n      ...userToRegister,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const handleRegisterFormSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (!emailIsValid(userToRegister.email)) {\r\n      dispatch(setErrorMsgs([\"Email invalide\", \"grudu\"]));\r\n    } else if (userToRegister.password.length < 8) {\r\n      dispatch(\r\n        setErrorMsgs([\"Le mot de passe doit comporter au moins 8 caractères\"])\r\n      );\r\n    } else if (userToRegister.password !== userToRegister.passwordConfirm) {\r\n      dispatch(setErrorMsgs([\"Les deux mots de passe doivent être les mêmes\"]));\r\n    } else {\r\n      dispatch(\r\n        register({\r\n          password: userToRegister.password,\r\n          email: userToRegister.email,\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='columns'>\r\n      <div className='column is-half is-offset-one-quarter'>\r\n        <div className='hero-body'>\r\n          <p className='title'>Bienvenue sur Projet Éléphant</p>\r\n          <p className='subtitle'>\r\n            <strong>Projet Éléphant</strong> est un site web de démonstration\r\n            par{\" \"}\r\n            <a\r\n              className='has-text-weight-medium has-text-black-bis'\r\n              href='https://audelcroix.com'\r\n            >\r\n              Aurélien Delcroix\r\n            </a>\r\n          </p>\r\n          <p className='subtitle'>Inscription</p>\r\n        </div>\r\n\r\n        <div className='column is-full'>\r\n          <MessageBoard />\r\n          <ErrorMsgBoard />\r\n        </div>\r\n\r\n        <div className='box'>\r\n          <div className='block mt-5'>\r\n            <form onSubmit={handleRegisterFormSubmit}>\r\n              <div className='field'>\r\n                <label className='label'>E-Mail</label>\r\n                <p className='control has-icons-left'>\r\n                  <input\r\n                    placeholder='E-Mail'\r\n                    className='input is-medium is-info'\r\n                    type='email'\r\n                    value={userToRegister.email}\r\n                    onChange={handleRegisterFormChange}\r\n                    name='email'\r\n                  />\r\n                  <span className='material-icons icon is-small is-left'>\r\n                    email\r\n                  </span>\r\n                </p>\r\n              </div>\r\n\r\n              <div className='field'>\r\n                <label className='label'>Mot de passe</label>\r\n                <p className='control has-icons-left'>\r\n                  <input\r\n                    placeholder='Mot de passe'\r\n                    className='input is-medium is-info'\r\n                    type='password'\r\n                    value={userToRegister.password}\r\n                    onChange={handleRegisterFormChange}\r\n                    name='password'\r\n                  />\r\n                  <span className='material-icons icon is-small is-left'>\r\n                    lock\r\n                  </span>\r\n                </p>\r\n              </div>\r\n\r\n              <div className='field'>\r\n                <label className='label'>Confirmation du mot de passe</label>\r\n                <p className='control has-icons-left'>\r\n                  <input\r\n                    placeholder='Confirmation du mot de passe'\r\n                    className='input is-medium is-info'\r\n                    type='password'\r\n                    value={userToRegister.passwordConfirm}\r\n                    onChange={handleRegisterFormChange}\r\n                    name='passwordConfirm'\r\n                  />\r\n                  <span className='material-icons icon is-small is-left'>\r\n                    lock\r\n                  </span>\r\n                </p>\r\n              </div>\r\n\r\n              <div className='control'>\r\n                <button type='submit' className='button is-link'>\r\n                  Créer mon profil\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n\r\n          <Link to={\"/login\"} className='has-text-weight-medium'>\r\n            Connexion\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  finishSubtask,\r\n  unfinishSubtask,\r\n  config,\r\n  setErrorMsgs,\r\n} from \"./../../actions/userActions\";\r\n\r\nimport axios from \"axios\";\r\n\r\nimport DatePicker, { registerLocale } from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport fr from \"date-fns/locale/fr\";\r\n\r\nimport TaskTimeTable from \"./TaskTimeTable\";\r\n\r\nconst IndividualSubtask = (props) => {\r\n  registerLocale(\"fr\", fr);\r\n\r\n  const { subtask } = { ...props };\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [localSubtask, setLocalSubtask] = useState(subtask);\r\n\r\n  const [subtaskIsUpdating, setSubtaskIsUpdating] = useState(false);\r\n\r\n  const [updatedSubtaskContent, setUpdatedSubtaskContent] = useState(\r\n    subtask.content\r\n  );\r\n  const [updatedSubtaskLimitDate, setUpdatedSubtaskLimitDate] = useState(\r\n    subtask.limitDate ? new Date(subtask.limitDate) : null\r\n  );\r\n  const [showSubtaskUpdateForm, setShowSubtaskUpdateForm] = useState(false);\r\n\r\n  // Change subtask completion status\r\n  const handleSubtaskCompletionChange = () => {\r\n    try {\r\n      setSubtaskIsUpdating(true);\r\n\r\n      if (!localSubtask.isDone) {\r\n        dispatch(finishSubtask(subtask._id)).then((res) => {\r\n          if (res) {\r\n            if (res.success) {\r\n              setLocalSubtask(res.finishedSubtask);\r\n            } else {\r\n              dispatch(setErrorMsgs([res.response.data.error_msg]));\r\n            }\r\n          }\r\n        });\r\n      } else {\r\n        dispatch(unfinishSubtask(subtask._id)).then((res) => {\r\n          if (res) {\r\n            if (res.success) {\r\n              setLocalSubtask(res.unfinishedSubtask);\r\n            } else {\r\n              dispatch(setErrorMsgs([res.response.data.error_msg]));\r\n            }\r\n          }\r\n        });\r\n      }\r\n    } catch (err) {\r\n      dispatch(setErrorMsgs([err.response.data.error_msg]));\r\n    } finally {\r\n      setSubtaskIsUpdating(false);\r\n    }\r\n  };\r\n\r\n  // Edit this subtask\r\n  const handleUpdatedSubtaskContent = (event) => {\r\n    setUpdatedSubtaskContent(event.target.value);\r\n  };\r\n\r\n  const handleUpdateSubtask = async (event) => {\r\n    try {\r\n      event.preventDefault();\r\n\r\n      // validation\r\n      if (updatedSubtaskContent.length > 280) {\r\n        dispatch(\r\n          setErrorMsgs(\"Le contenu ne peut comporter plus de 280 caractères\")\r\n        );\r\n      }\r\n\r\n      if (updatedSubtaskContent.length < 3) {\r\n        dispatch(\r\n          setErrorMsgs(\"Le contenu doit comporter au moins 3 caractères\")\r\n        );\r\n      }\r\n\r\n      const res = await axios.patch(\r\n        `http://localhost:5000/api/tasks/edit_subtask/${subtask._id}`,\r\n        {\r\n          content: updatedSubtaskContent,\r\n          limitDate: updatedSubtaskLimitDate,\r\n        },\r\n        config\r\n      );\r\n\r\n      setLocalSubtask(res.data.updatedSubtask);\r\n\r\n      setShowSubtaskUpdateForm(false);\r\n    } catch (err) {\r\n      dispatch(setErrorMsgs([err.response.data.error_msg]));\r\n\r\n      // Reset form\r\n      setUpdatedSubtaskContent(localSubtask.content);\r\n      setUpdatedSubtaskLimitDate(\r\n        subtask.limitDate ? new Date(subtask.limitDate) : null\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='box'>\r\n      {subtaskIsUpdating ? (\r\n        <div>\r\n          <p>Mise à jour en cours...</p>\r\n        </div>\r\n      ) : showSubtaskUpdateForm ? (\r\n        <div>\r\n          <form onSubmit={handleUpdateSubtask}>\r\n            <div className='field'>\r\n              <label htmlFor='content'>Contenu</label>\r\n\r\n              <p className='control'>\r\n                <textarea\r\n                  className='textarea is-info'\r\n                  type='text'\r\n                  name='content'\r\n                  placeholder='Contenu'\r\n                  value={updatedSubtaskContent}\r\n                  onChange={handleUpdatedSubtaskContent}\r\n                  required\r\n                ></textarea>\r\n              </p>\r\n            </div>\r\n\r\n            <div className='field'>\r\n              <DatePicker\r\n                locale='fr'\r\n                selected={updatedSubtaskLimitDate}\r\n                onChange={(date) => setUpdatedSubtaskLimitDate(date)}\r\n                dateFormatCalendar={\"MMM yyyy\"}\r\n                showMonthDropdown\r\n                useFullMonthInDropdown\r\n                closeOnScroll={true}\r\n                isClearable\r\n                placeholderText='Date limite'\r\n                dateFormat='dd/MM/yyyy HH:mm'\r\n                className='blue-border input control is-info'\r\n                showTimeInput\r\n              />\r\n            </div>\r\n\r\n            <div className='buttons'>\r\n              <button className='button is-small is-info' type='submit'>\r\n                Modifier\r\n              </button>\r\n\r\n              <button\r\n                className='button is-small is-warning'\r\n                onClick={() => {\r\n                  setShowSubtaskUpdateForm(false);\r\n                  // Reset form\r\n                  setUpdatedSubtaskContent(localSubtask.content);\r\n                  setUpdatedSubtaskLimitDate(\r\n                    subtask.limitDate ? new Date(subtask.limitDate) : null\r\n                  );\r\n                }}\r\n              >\r\n                Annuler\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      ) : (\r\n        <div className='block'>\r\n          <div className='content'>\r\n            {localSubtask.limitDate && (\r\n              <TaskTimeTable limitDate={localSubtask.limitDate} />\r\n            )}\r\n\r\n            <p>{localSubtask.content}</p>\r\n          </div>\r\n\r\n          <div className='buttons'>\r\n            <button\r\n              className={\r\n                localSubtask.isDone\r\n                  ? \"button is-small is-primary\"\r\n                  : \"button is-small is-info\"\r\n              }\r\n              onClick={handleSubtaskCompletionChange}\r\n            >\r\n              {localSubtask.isDone ? \"Terminée\" : \"En cours\"}\r\n            </button>\r\n            {!localSubtask.isDone && (\r\n              <button\r\n                className='button is-small is-warning'\r\n                onClick={() => {\r\n                  setShowSubtaskUpdateForm(true);\r\n                }}\r\n              >\r\n                Modifier\r\n              </button>\r\n            )}\r\n            <button\r\n              className='button is-small is-danger'\r\n              onClick={() => {\r\n                setSubtaskIsUpdating(true);\r\n                props.deleteFunction(subtask._id);\r\n              }}\r\n            >\r\n              Supprimer\r\n            </button>{\" \"}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IndividualSubtask;\r\n","import React from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport axios from \"axios\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  removeFromCollection,\r\n  config,\r\n  setErrorMsgs,\r\n} from \"../../actions/userActions\";\r\n\r\nimport IndividualCollection from \"./IndividualCollection\";\r\n\r\nconst RemoveFromCollection = (props) => {\r\n  const dispatch = useDispatch();\r\n  const { origin, targetDocumentId, currentCollections } = props;\r\n\r\n  const handleRemoveFromCollectionDemand = async (collectionId) => {\r\n    try {\r\n      let adaptiveFormData;\r\n\r\n      switch (origin) {\r\n        case \"processes\":\r\n          adaptiveFormData = {\r\n            processId: targetDocumentId,\r\n            collectionId: collectionId,\r\n          };\r\n          break;\r\n\r\n        case \"tasks\":\r\n          adaptiveFormData = {\r\n            taskId: targetDocumentId,\r\n            collectionId: collectionId,\r\n          };\r\n          break;\r\n\r\n        case \"notes\":\r\n          adaptiveFormData = {\r\n            noteId: targetDocumentId,\r\n            collectionId: collectionId,\r\n          };\r\n          break;\r\n\r\n        default:\r\n          break;\r\n      }\r\n\r\n      const removeFromCollectionRes = await axios.patch(\r\n        `http://localhost:5000/api/${origin}/remove_from_collection`,\r\n        adaptiveFormData,\r\n        config\r\n      );\r\n\r\n      dispatch(\r\n        removeFromCollection(removeFromCollectionRes.data.updatedCollection)\r\n      );\r\n\r\n      props.removeCollectionFromMotherProcess(\r\n        removeFromCollectionRes.data.updatedCollection\r\n      );\r\n    } catch (err) {\r\n      dispatch(setErrorMsgs([err.response.data.error_msg]));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='block'>\r\n      <h2 className='subtitle'>Collections:</h2>\r\n\r\n      {currentCollections.length > 0 ? (\r\n        currentCollections.map((collection) => {\r\n          return (\r\n            <div key={uuidv4()}>\r\n              <IndividualCollection collection={collection} />\r\n\r\n              <small\r\n                className='is-size-7 is-clickable'\r\n                onClick={() => {\r\n                  handleRemoveFromCollectionDemand(collection._id);\r\n                }}\r\n              >\r\n                Supprimer de cette collection\r\n              </small>\r\n            </div>\r\n          );\r\n        })\r\n      ) : (\r\n        <p className='is-size-4 has-text-centered has-text-weight-semibold'>\r\n          Ce document n'appartient à aucune collection\r\n        </p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RemoveFromCollection;\r\n","import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  addToCollection,\r\n  config,\r\n  setErrorMsgs,\r\n} from \"./../../actions/userActions\";\r\n\r\nconst AddToCollectionForm = (props) => {\r\n  const dispatch = useDispatch();\r\n  const { collections } = useSelector((state) => state.user);\r\n\r\n  const [selectedCollectionId, setSelectedCollectionId] = useState(\r\n    collections[0] ? collections[0]._id : null\r\n  );\r\n\r\n  const handleSelectSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      let targetCollection = collections.find((collection) => {\r\n        return collection._id === selectedCollectionId;\r\n      });\r\n\r\n      let adaptiveFormData;\r\n\r\n      switch (props.origin) {\r\n        case \"processes\":\r\n          adaptiveFormData = {\r\n            processId: props.targetDocumentId,\r\n            collectionId: targetCollection._id,\r\n          };\r\n          break;\r\n\r\n        case \"tasks\":\r\n          adaptiveFormData = {\r\n            taskId: props.targetDocumentId,\r\n            collectionId: targetCollection._id,\r\n          };\r\n          break;\r\n\r\n        case \"notes\":\r\n          adaptiveFormData = {\r\n            noteId: props.targetDocumentId,\r\n            collectionId: targetCollection._id,\r\n          };\r\n          break;\r\n\r\n        default:\r\n          break;\r\n      }\r\n\r\n      const addToCollectionRes = await axios.patch(\r\n        `http://localhost:5000/api/${props.origin}/add_to_collection`,\r\n        adaptiveFormData,\r\n        config\r\n      );\r\n\r\n      dispatch(addToCollection(addToCollectionRes.data.updatedCollection));\r\n\r\n      props.addCollectionToMotherProcess(\r\n        addToCollectionRes.data.updatedCollection\r\n      );\r\n\r\n      props.closeAddToCollectionForm();\r\n    } catch (err) {\r\n      dispatch(setErrorMsgs([err.response.data.error_msg]));\r\n    }\r\n  };\r\n\r\n  const handleSelectChange = (event) => {\r\n    setSelectedCollectionId(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className='block'>\r\n      {collections.length > 0 ? (\r\n        <form onSubmit={handleSelectSubmit}>\r\n          <div className='field'>\r\n            <label className='label'>Collections:</label>\r\n\r\n            <div className='select is-info'>\r\n              <select\r\n                value={selectedCollectionId}\r\n                onChange={handleSelectChange}\r\n              >\r\n                {collections.map((collection, index) => {\r\n                  collection[props.origin].some((doc) => {\r\n                    return doc === props.targetDocumentId;\r\n                  });\r\n\r\n                  return (\r\n                    !collection[props.origin].some((doc) => {\r\n                      return doc === props.targetDocumentId;\r\n                    }) && (\r\n                      <option value={collection._id} key={index}>\r\n                        {collection.title}\r\n                      </option>\r\n                    )\r\n                  );\r\n                })}\r\n              </select>\r\n            </div>\r\n          </div>\r\n\r\n          <div className='buttons'>\r\n            <button className='button is-small is-info' type='submit'>\r\n              Ajouter à cette collection\r\n            </button>\r\n\r\n            <button\r\n              className='button is-small is-warning'\r\n              onClick={() => {\r\n                props.closeAddToCollectionForm();\r\n              }}\r\n            >\r\n              Annuler\r\n            </button>\r\n          </div>\r\n        </form>\r\n      ) : (\r\n        <p className='is-size-4 has-text-centered has-text-weight-semibold'>\r\n          Aucune collection à laquelle ajouter ce document\r\n        </p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddToCollectionForm;\r\n","import React, { useEffect, useState, Fragment } from \"react\";\r\nimport axios from \"axios\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  deleteTaskAndSubtasks,\r\n  unfinishTask,\r\n  finishTask,\r\n  updateTask,\r\n  setLoading,\r\n  addSubtask,\r\n  deleteSubtask,\r\n  setErrorMsgs,\r\n} from \"./../../actions/userActions\";\r\n\r\nimport MainLoading from \"../parts/MainLoading\";\r\nimport IndividualSubtask from \"../parts/IndividualSubtask\";\r\nimport RemoveFromCollection from \"../parts/RemoveFromCollection\";\r\nimport AddToCollectionForm from \"../parts/AddToCollectionForm\";\r\nimport TaskTimeTable from \"../parts/TaskTimeTable\";\r\nimport ErrorMsgBoard from \"../parts/ErrorMsgBoard\";\r\nimport MessageBoard from \"../parts/MessageBoard\";\r\n\r\nimport \"moment-timezone\";\r\nimport \"moment/locale/fr\";\r\n\r\nimport DatePicker, { registerLocale } from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport fr from \"date-fns/locale/fr\";\r\n\r\nconst TaskDetail = (props) => {\r\n  registerLocale(\"fr\", fr);\r\n\r\n  const { loading } = useSelector((state) => state.user);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [currentTask, setCurrentTask] = useState(null);\r\n\r\n  const [isBeingUpdated, setIsBeingUpdated] = useState(false);\r\n  const [updatedTaskContent, setUpdatedTaskContent] = useState(\"\");\r\n  const [updatedTaskLimitDate, setUpdatedTaskLimitDate] = useState(null);\r\n\r\n  const [showAddToCollectionForm, setShowAddToCollectionForm] = useState(false);\r\n\r\n  const [isUrgentTask, setIsUrgentTask] = useState(false);\r\n  const [isPastTask, setIsPastTask] = useState(false);\r\n\r\n  const [isAddingSubtask, setIsAddingSubtask] = useState(false);\r\n  const [newSubtaskContent, setNewSubtaskContent] = useState(\"\");\r\n  const [newSubtaskLimitDate, setNewSubtaskLimitDate] = useState();\r\n  const [localSubtasks, setLocalSubtasks] = useState([]);\r\n\r\n  const updateTaskUrgencyStatus = (taskToCheck) => {\r\n    let today = new Date();\r\n    let taskToCheckTime = new Date(taskToCheck.limitDate);\r\n\r\n    if (today.getDate() + 2 >= taskToCheckTime.getDate()) {\r\n      setIsUrgentTask(true);\r\n    } else {\r\n      setIsUrgentTask(false);\r\n    }\r\n\r\n    if (taskToCheckTime.setHours(0, 0, 0, 0) <= today.setHours(0, 0, 0, 0)) {\r\n      setIsPastTask(true);\r\n    } else {\r\n      setIsPastTask(false);\r\n    }\r\n  };\r\n\r\n  const handleTaskUpdate = (event) => {\r\n    try {\r\n      dispatch(\r\n        updateTask(\r\n          {\r\n            limitDate: updatedTaskLimitDate,\r\n            content: updatedTaskContent,\r\n            taskToUpdateId: currentTask._id,\r\n          },\r\n          true\r\n        )\r\n      ).then((res) => {\r\n        if (res && res.updatedTask) {\r\n          setCurrentTask(res.updatedTask);\r\n          if (!currentTask.isDone) {\r\n            updateTaskUrgencyStatus(res.updatedTask);\r\n          }\r\n        }\r\n      });\r\n\r\n      setIsBeingUpdated(false);\r\n    } catch (err) {\r\n      dispatch(setErrorMsgs([err.response.data.error_msg]));\r\n    }\r\n\r\n    event.preventDefault();\r\n  };\r\n\r\n  const handleUpdatedTaskContent = (event) => {\r\n    setUpdatedTaskContent(event.target.value);\r\n  };\r\n\r\n  // Handle form modification\r\n  const handleNewSubtaskContent = (event) => {\r\n    setNewSubtaskContent(event.target.value);\r\n  };\r\n\r\n  const handleAddNewSubtask = (event) => {\r\n    event.preventDefault();\r\n\r\n    // validation\r\n    if (newSubtaskContent.length > 280) {\r\n      dispatch(\r\n        setErrorMsgs(\"Le contenu ne peut comporter plus de 280 caractères\")\r\n      );\r\n    }\r\n\r\n    if (newSubtaskContent.length < 3) {\r\n      dispatch(setErrorMsgs(\"Le contenu doit comporter au moins 3 caractères\"));\r\n    }\r\n\r\n    dispatch(\r\n      addSubtask(\r\n        { content: newSubtaskContent, limitDate: newSubtaskLimitDate },\r\n        currentTask._id\r\n      )\r\n    ).then((res) => {\r\n      setNewSubtaskContent(\"\");\r\n      setNewSubtaskLimitDate();\r\n\r\n      if (res.data && res.data.newSubTask) {\r\n        setLocalSubtasks([...localSubtasks, res.data.newSubTask]);\r\n\r\n        setIsAddingSubtask(false);\r\n      }\r\n    });\r\n  };\r\n\r\n  // Load the task and its subtasks\r\n  useEffect(() => {\r\n    const getTask = async () => {\r\n      try {\r\n        dispatch(setLoading(true));\r\n\r\n        const res = await axios.get(\r\n          `http://localhost:5000/api/tasks/get_task_complete/${props.match.params.taskId}`\r\n        );\r\n\r\n        setCurrentTask(res.data.task);\r\n\r\n        if (!res.data.task.isDone) {\r\n          updateTaskUrgencyStatus(res.data.task);\r\n        }\r\n\r\n        setUpdatedTaskContent(res.data.task.content);\r\n        setUpdatedTaskLimitDate(\r\n          res.data.task.limitDate && new Date(res.data.task.limitDate)\r\n        );\r\n\r\n        setLocalSubtasks(res.data.task.subtasks);\r\n\r\n        dispatch(setLoading(false));\r\n      } catch (err) {\r\n        dispatch(\r\n          setErrorMsgs(\r\n            err.response && err.response.data.error_msg\r\n              ? [err.response.data.error_msg]\r\n              : [\r\n                  \"Nous sommes désolés, une erreur inattendue s'est produite lors du chargement\",\r\n                ]\r\n          )\r\n        );\r\n\r\n        props.history.push(\"/\");\r\n      }\r\n    };\r\n\r\n    getTask();\r\n  }, []);\r\n\r\n  const deleteSubtaskFunction = (subtaskToDeleteId) => {\r\n    dispatch(deleteSubtask(subtaskToDeleteId)).then((res) => {\r\n      if (res && !res.success) {\r\n        dispatch(setErrorMsgs([res.response.data.error_msg]));\r\n      } else if (res && res.success) {\r\n        setLocalSubtasks(\r\n          localSubtasks.filter((subtask) => {\r\n            return subtask._id !== subtaskToDeleteId;\r\n          })\r\n        );\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className='columns'>\r\n      <div className='column is-three-fifths is-offset-one-fifth'>\r\n        {loading ? (\r\n          <MainLoading />\r\n        ) : currentTask ? (\r\n          <Fragment>\r\n            <div className='block mt-5'>\r\n              <Link to={\"/\"} className='has-text-weight-medium'>\r\n                Retour aux tâches\r\n              </Link>\r\n            </div>\r\n\r\n            <div className='columns my-0 py-0'>\r\n              <div className='column is-half is-offset-one-quarter'>\r\n                <MessageBoard />\r\n                <ErrorMsgBoard />\r\n              </div>\r\n            </div>\r\n\r\n            {isBeingUpdated ? (\r\n              <div className='block'>\r\n                <form onSubmit={handleTaskUpdate}>\r\n                  <div className='field'>\r\n                    <label htmlFor='content'>Contenu</label>\r\n\r\n                    <p className='control'>\r\n                      <textarea\r\n                        className='textarea is-info'\r\n                        type='text'\r\n                        name='content'\r\n                        placeholder='Contenu'\r\n                        value={updatedTaskContent}\r\n                        onChange={handleUpdatedTaskContent}\r\n                        required\r\n                      ></textarea>\r\n                    </p>\r\n                  </div>\r\n                  <div className='field'>\r\n                    <DatePicker\r\n                      locale='fr'\r\n                      selected={updatedTaskLimitDate}\r\n                      onChange={(date) => setUpdatedTaskLimitDate(date)}\r\n                      dateFormatCalendar={\"MMM yyyy\"}\r\n                      showMonthDropdown\r\n                      useFullMonthInDropdown\r\n                      closeOnScroll={true}\r\n                      isClearable\r\n                      placeholderText='Date limite'\r\n                      dateFormat='dd/MM/yyyy HH:mm'\r\n                      className='blue-border input control is-info'\r\n                      showTimeInput\r\n                    />\r\n                  </div>\r\n\r\n                  <div className='buttons'>\r\n                    <button className='button is-small is-info' type='submit'>\r\n                      Modifier\r\n                    </button>\r\n\r\n                    <button\r\n                      className='button is-small is-warning'\r\n                      onClick={() => {\r\n                        setIsBeingUpdated(false);\r\n                      }}\r\n                    >\r\n                      Annuler\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            ) : (\r\n              <div className='block'>\r\n                <div className='block'>\r\n                  {currentTask.limitDate && (\r\n                    <TaskTimeTable limitDate={currentTask.limitDate} />\r\n                  )}\r\n                </div>\r\n\r\n                <div className='content'>\r\n                  <p>{currentTask.content}</p>\r\n                </div>\r\n\r\n                <div className='buttons'>\r\n                  {currentTask.isDone ? (\r\n                    <button\r\n                      className='button is-small is-primary'\r\n                      onClick={() => {\r\n                        dispatch(unfinishTask(currentTask._id, true)).then(\r\n                          (res) => {\r\n                            if (res.unfinishedTask) {\r\n                              setCurrentTask(res.unfinishedTask);\r\n                              updateTaskUrgencyStatus(res.unfinishedTask);\r\n                            }\r\n                          }\r\n                        );\r\n                      }}\r\n                    >\r\n                      Terminée\r\n                    </button>\r\n                  ) : (\r\n                    <button\r\n                      className='button is-small is-info'\r\n                      onClick={() => {\r\n                        dispatch(finishTask(currentTask._id, true)).then(\r\n                          (res) => {\r\n                            if (res.finishedTask) {\r\n                              setCurrentTask(res.finishedTask);\r\n                              updateTaskUrgencyStatus(res.finishedTask);\r\n                            }\r\n                          }\r\n                        );\r\n                      }}\r\n                    >\r\n                      En cours\r\n                    </button>\r\n                  )}\r\n\r\n                  {!currentTask.isDone && (\r\n                    <button\r\n                      className='button is-small is-warning'\r\n                      onClick={() => {\r\n                        setIsBeingUpdated(true);\r\n                      }}\r\n                    >\r\n                      Modifier\r\n                    </button>\r\n                  )}\r\n\r\n                  <button\r\n                    className='button is-small is-danger'\r\n                    onClick={() => {\r\n                      dispatch(\r\n                        deleteTaskAndSubtasks(currentTask._id, true)\r\n                      ).then((res) => {\r\n                        if (res.success) {\r\n                          props.history.push(\"/\");\r\n                        }\r\n                      });\r\n                    }}\r\n                  >\r\n                    Supprimer\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {/* SUBTASKS */}\r\n\r\n            {!isAddingSubtask && (\r\n              <div className='block'>\r\n                <button\r\n                  className='button is-small is-info'\r\n                  onClick={() => {\r\n                    setIsAddingSubtask(true);\r\n                  }}\r\n                >\r\n                  Ajouter une sous-tâche\r\n                </button>\r\n              </div>\r\n            )}\r\n\r\n            {isAddingSubtask && (\r\n              <div className='block'>\r\n                <form onSubmit={handleAddNewSubtask}>\r\n                  <div className='field'>\r\n                    <label htmlFor='content'>Contenu</label>\r\n\r\n                    <p className='control'>\r\n                      <textarea\r\n                        className='textarea is-info'\r\n                        type='text'\r\n                        name='content'\r\n                        placeholder='Contenu'\r\n                        value={newSubtaskContent}\r\n                        onChange={handleNewSubtaskContent}\r\n                        required\r\n                      ></textarea>\r\n                    </p>\r\n                  </div>\r\n\r\n                  <div className='field'>\r\n                    <DatePicker\r\n                      locale='fr'\r\n                      selected={newSubtaskLimitDate}\r\n                      onChange={(date) => setNewSubtaskLimitDate(date)}\r\n                      dateFormatCalendar={\"MMM yyyy\"}\r\n                      showMonthDropdown\r\n                      useFullMonthInDropdown\r\n                      closeOnScroll={true}\r\n                      isClearable\r\n                      placeholderText='Date limite'\r\n                      dateFormat='dd/MM/yyyy HH:mm'\r\n                      className='blue-border input control is-info'\r\n                      showTimeInput\r\n                    />\r\n                  </div>\r\n\r\n                  <div className='buttons'>\r\n                    <button className='button is-small is-info' type='submit'>\r\n                      Ajouter\r\n                    </button>\r\n\r\n                    <button\r\n                      className='button is-small is-light'\r\n                      onClick={() => {\r\n                        setIsAddingSubtask(false);\r\n                      }}\r\n                    >\r\n                      Annuler\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            )}\r\n\r\n            <div className='block'>\r\n              {localSubtasks.length > 0 ? (\r\n                <ul>\r\n                  {localSubtasks.map((subtask) => {\r\n                    return (\r\n                      <IndividualSubtask\r\n                        key={uuidv4()}\r\n                        subtask={subtask}\r\n                        deleteFunction={deleteSubtaskFunction}\r\n                      />\r\n                    );\r\n                  })}\r\n                </ul>\r\n              ) : (\r\n                <p className='is-size-6  has-text-weight-semibold'>\r\n                  <small>Aucune sous-tâche</small>\r\n                </p>\r\n              )}\r\n            </div>\r\n\r\n            <RemoveFromCollection\r\n              origin={\"tasks\"}\r\n              targetDocumentId={currentTask._id}\r\n              currentCollections={currentTask.collections}\r\n              removeCollectionFromMotherProcess={(collectionObject) => {\r\n                setCurrentTask({\r\n                  ...currentTask,\r\n                  collections: currentTask.collections.filter((collection) => {\r\n                    return collection._id !== collectionObject._id;\r\n                  }),\r\n                });\r\n              }}\r\n            />\r\n\r\n            {showAddToCollectionForm ? (\r\n              <AddToCollectionForm\r\n                origin={\"tasks\"}\r\n                targetDocumentId={currentTask._id}\r\n                addCollectionToMotherProcess={(collectionObject) => {\r\n                  setCurrentTask({\r\n                    ...currentTask,\r\n                    collections: [...currentTask.collections, collectionObject],\r\n                  });\r\n                }}\r\n                closeAddToCollectionForm={() => {\r\n                  setShowAddToCollectionForm(false);\r\n                }}\r\n              />\r\n            ) : (\r\n              <div className='block'>\r\n                <button\r\n                  className='button is-small is-info'\r\n                  onClick={() => {\r\n                    setShowAddToCollectionForm(true);\r\n                  }}\r\n                >\r\n                  Ajouter à une collection\r\n                </button>\r\n              </div>\r\n            )}\r\n          </Fragment>\r\n        ) : (\r\n          <p className='is-size-4 has-text-centered has-text-weight-semibold'>\r\n            Aucune tâche chargée\r\n          </p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskDetail;\r\n","import React, { useState } from \"react\";\r\n\r\nconst IndividualStep = (props) => {\r\n  const { step, deleteFunction, updateFunction } = props;\r\n\r\n  const [showStepUpdateForm, setShowStepUpdateForm] = useState(false);\r\n  const [updatedStep, setUpdatedStep] = useState({ content: step.content });\r\n\r\n  const handleUpdatedStepChange = (event) => {\r\n    setUpdatedStep({\r\n      ...updatedStep,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className='block'>\r\n      {showStepUpdateForm ? (\r\n        <div className='box'>\r\n          <form\r\n            onSubmit={(event) => {\r\n              event.preventDefault();\r\n              updateFunction({\r\n                stepId: step._id,\r\n                content: updatedStep.content,\r\n              });\r\n              setShowStepUpdateForm(false);\r\n            }}\r\n          >\r\n            <div className='field'>\r\n              <label className='label'>Contenu</label>\r\n\r\n              <p className='control'>\r\n                <input\r\n                  className='input is-small is-info'\r\n                  type='text'\r\n                  value={updatedStep.content}\r\n                  name='content'\r\n                  placeholder='Contenu'\r\n                  onChange={handleUpdatedStepChange}\r\n                />\r\n              </p>\r\n            </div>\r\n\r\n            <div className='field is-grouped'>\r\n              <div className='control'>\r\n                <button className='button is-warning is-small' type='submit'>\r\n                  Modifier\r\n                </button>\r\n              </div>\r\n\r\n              <div className='control'>\r\n                <button\r\n                  className='button is-info is-small'\r\n                  onClick={() => setShowStepUpdateForm(false)}\r\n                >\r\n                  Annuler\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      ) : (\r\n        <div className='box'>\r\n          <p className='has-text-weight-normal mb-2'>{step.content}</p>\r\n\r\n          <div className='buttons'>\r\n            <button\r\n              onClick={() => {\r\n                setShowStepUpdateForm(true);\r\n              }}\r\n              title='Modifier'\r\n              className='button is-small is-warning'\r\n            >\r\n              Modifier\r\n            </button>\r\n\r\n            <button\r\n              onClick={() => {\r\n                deleteFunction(step._id);\r\n              }}\r\n              title='Supprimer'\r\n              className='button is-small is-danger'\r\n            >\r\n              Supprimer\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IndividualStep;\r\n","import React, { useEffect, useState, Fragment } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport axios from \"axios\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { setLoading, config, setErrorMsgs } from \"./../../actions/userActions\";\r\n\r\nimport MainLoading from \"./../parts/MainLoading\";\r\nimport IndividualStep from \"./../parts/IndividualStep\";\r\nimport AddToCollectionForm from \"../parts/AddToCollectionForm\";\r\nimport RemoveFromCollection from \"../parts/RemoveFromCollection\";\r\nimport ErrorMsgBoard from \"../parts/ErrorMsgBoard\";\r\nimport MessageBoard from \"../parts/MessageBoard\";\r\n\r\nconst ProcessDetail = (props) => {\r\n  const dispatch = useDispatch();\r\n  const { loading } = useSelector((state) => state.user);\r\n\r\n  const [currentProcess, setCurrentProcess] = useState(null);\r\n  const [localSteps, setLocalSteps] = useState([]);\r\n\r\n  const [showProcessUpdateForm, setShowProcesUpdateForm] = useState(false);\r\n  const [updatedProcess, setUpdatedProcess] = useState({\r\n    description: \"\",\r\n    title: \"\",\r\n  });\r\n\r\n  const [showAddToCollectionForm, setShowAddToCollectionForm] = useState(false);\r\n\r\n  const [showNewStepForm, setShowNewStepForm] = useState(false);\r\n  const [newStep, setNewStep] = useState({ content: \"\" });\r\n\r\n  const handleProcessUpdateFormChange = (event) => {\r\n    setUpdatedProcess({\r\n      ...updatedProcess,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const handleProcessUpdateFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      dispatch(setLoading(true));\r\n\r\n      await axios\r\n        .patch(\r\n          `http://localhost:5000/api/processes/edit_process/${currentProcess._id}`,\r\n          {\r\n            description: updatedProcess.description,\r\n            title: updatedProcess.title,\r\n          },\r\n          config\r\n        )\r\n        .then((res) => {\r\n          setCurrentProcess(res.data.updatedProcess);\r\n          setUpdatedProcess({\r\n            title: res.data.updatedProcess.title,\r\n            description: res.data.updatedProcess.description,\r\n          });\r\n          setShowProcesUpdateForm(false);\r\n        });\r\n    } catch (err) {\r\n      dispatch(setErrorMsgs([err.response.data.error_msg]));\r\n    } finally {\r\n      dispatch(setLoading(false));\r\n    }\r\n  };\r\n\r\n  const handleNewStepChange = (event) => {\r\n    setNewStep({\r\n      ...newStep,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const handleNewStepFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      dispatch(setLoading(true));\r\n\r\n      await axios\r\n        .post(\r\n          `http://localhost:5000/api/processes/new_step/${currentProcess._id}`,\r\n          {\r\n            content: newStep.content,\r\n          },\r\n          config\r\n        )\r\n        .then((res) => {\r\n          setCurrentProcess(res.data.updatedProcess);\r\n\r\n          setLocalSteps([...localSteps, res.data.newStep]);\r\n\r\n          setShowNewStepForm(false);\r\n          setNewStep({\r\n            content: \"\",\r\n          });\r\n        });\r\n    } catch (err) {\r\n      dispatch(setErrorMsgs([err.response.data.error_msg]));\r\n    } finally {\r\n      dispatch(setLoading(false));\r\n    }\r\n  };\r\n\r\n  const handleProcessDelete = async () => {\r\n    try {\r\n      await axios.delete(\r\n        `http://localhost:5000/api/processes/delete_process/${currentProcess._id}`\r\n      );\r\n\r\n      props.history.push(\"/\");\r\n    } catch (err) {\r\n      dispatch(setErrorMsgs([err.response.data.error_msg]));\r\n    }\r\n  };\r\n\r\n  const deleteStepFunction = async (stepToDeleteId) => {\r\n    try {\r\n      await axios.delete(\r\n        `http://localhost:5000/api/processes/delete_step/${stepToDeleteId}`\r\n      );\r\n\r\n      setLocalSteps(\r\n        localSteps.filter((step) => {\r\n          return step._id !== stepToDeleteId;\r\n        })\r\n      );\r\n    } catch (err) {\r\n      dispatch(setErrorMsgs([err.response.data.error_msg]));\r\n    } finally {\r\n      dispatch(setLoading(false));\r\n    }\r\n  };\r\n\r\n  const updateStepFunction = async (formData) => {\r\n    dispatch(setLoading(true));\r\n\r\n    try {\r\n      let stepToUpdateIndex = localSteps.findIndex((step) => {\r\n        return step._id === formData.stepId;\r\n      });\r\n      const stepUpdateRes = await axios.patch(\r\n        `http://localhost:5000/api/processes/edit_step/${formData.stepId}`,\r\n        { content: formData.content },\r\n        config\r\n      );\r\n\r\n      localSteps[stepToUpdateIndex] = stepUpdateRes.data.updatedStep;\r\n    } catch (err) {\r\n      dispatch(setErrorMsgs([err.response.data.error_msg]));\r\n    } finally {\r\n      dispatch(setLoading(false));\r\n    }\r\n  };\r\n\r\n  // es-lint\r\n  useEffect(() => {\r\n    const getProcess = async () => {\r\n      try {\r\n        dispatch(setLoading(true));\r\n\r\n        const res = await axios.get(\r\n          `http://localhost:5000/api/processes/get_process_steps/${props.match.params.processId}`\r\n        );\r\n\r\n        setCurrentProcess(res.data.targetProcess);\r\n\r\n        setUpdatedProcess({\r\n          description: res.data.targetProcess.description,\r\n          title: res.data.targetProcess.title,\r\n        });\r\n\r\n        setLocalSteps(res.data.targetProcess.steps);\r\n\r\n        dispatch(setLoading(false));\r\n      } catch (err) {\r\n        dispatch(\r\n          setErrorMsgs(\r\n            err.response && err.response.data.error_msg\r\n              ? [err.response.data.error_msg]\r\n              : [\r\n                  \"Nous sommes désolés, une erreur inattendue s'est produite lors du chargement\",\r\n                ]\r\n          )\r\n        );\r\n\r\n        props.history.push(\"/\");\r\n      }\r\n    };\r\n\r\n    getProcess();\r\n  }, []);\r\n\r\n  return (\r\n    <div className='columns'>\r\n      <div className='column is-three-fifths is-offset-one-fifth'>\r\n        {loading ? (\r\n          <MainLoading />\r\n        ) : (\r\n          <Fragment>\r\n            <div className='block mt-5'>\r\n              <Link to={\"/\"} className='has-text-weight-medium'>\r\n                Retour aux processus\r\n              </Link>\r\n            </div>\r\n\r\n            <div className='columns my-0 py-0'>\r\n              <div className='column is-half is-offset-one-quarter'>\r\n                <MessageBoard />\r\n                <ErrorMsgBoard />\r\n              </div>\r\n            </div>\r\n\r\n            {currentProcess ? (\r\n              <Fragment>\r\n                {showProcessUpdateForm ? (\r\n                  <div className='block'>\r\n                    <form onSubmit={handleProcessUpdateFormSubmit}>\r\n                      <div className='field'>\r\n                        <label className='label'>Titre</label>\r\n\r\n                        <p className='control'>\r\n                          <input\r\n                            type='text'\r\n                            className='input is-medium is-info'\r\n                            value={updatedProcess.title}\r\n                            name='title'\r\n                            onChange={handleProcessUpdateFormChange}\r\n                          />\r\n                        </p>\r\n                      </div>\r\n\r\n                      <div className='field'>\r\n                        <label className='label'>Description</label>\r\n\r\n                        <p className='control'>\r\n                          <textarea\r\n                            className='textarea is-info'\r\n                            value={updatedProcess.description}\r\n                            name='description'\r\n                            placeholder='Description du processus'\r\n                            onChange={handleProcessUpdateFormChange}\r\n                          ></textarea>\r\n                        </p>\r\n                      </div>\r\n\r\n                      <div className='buttons'>\r\n                        <button\r\n                          className='button is-small is-info'\r\n                          type='submit'\r\n                        >\r\n                          Valider\r\n                        </button>\r\n\r\n                        <button\r\n                          className='button is-small is-warning'\r\n                          onClick={() => {\r\n                            setShowProcesUpdateForm(false);\r\n                          }}\r\n                        >\r\n                          Annuler\r\n                        </button>\r\n                      </div>\r\n                    </form>\r\n                  </div>\r\n                ) : (\r\n                  <Fragment>\r\n                    <div className='block'>\r\n                      <div className='content'>\r\n                        <h2 className='subtitle'>{currentProcess.title}</h2>\r\n\r\n                        <p className=''>{currentProcess.description}</p>\r\n\r\n                        <small>\r\n                          {currentProcess.steps.length} étape\r\n                          {currentProcess.steps.length > 1 && \"s\"}\r\n                        </small>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className='block'>\r\n                      <div className='buttons'>\r\n                        <button\r\n                          className='button is-small is-warning'\r\n                          onClick={() => {\r\n                            setShowProcesUpdateForm(true);\r\n                            setShowNewStepForm(false);\r\n                          }}\r\n                        >\r\n                          Modifier\r\n                        </button>\r\n\r\n                        {!showNewStepForm && (\r\n                          <button\r\n                            className='button is-small is-info'\r\n                            onClick={() => {\r\n                              setShowNewStepForm(true);\r\n                            }}\r\n                          >\r\n                            Ajouter une étape\r\n                          </button>\r\n                        )}\r\n\r\n                        <button\r\n                          className='button is-small is-danger'\r\n                          onClick={handleProcessDelete}\r\n                        >\r\n                          Supprimer\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </Fragment>\r\n                )}\r\n\r\n                {/* STEPS */}\r\n\r\n                {showNewStepForm && (\r\n                  <div className='block'>\r\n                    <form onSubmit={handleNewStepFormSubmit}>\r\n                      <div className='field'>\r\n                        <label className='label'>Contenu</label>\r\n\r\n                        <p className='control'>\r\n                          <input\r\n                            className='input is-small is-info'\r\n                            type='text'\r\n                            value={newStep.content}\r\n                            name='content'\r\n                            placeholder='Contenu'\r\n                            onChange={handleNewStepChange}\r\n                          />\r\n                        </p>\r\n                      </div>\r\n\r\n                      <div className='buttons'>\r\n                        <button\r\n                          className='button is-small is-info'\r\n                          type='submit'\r\n                        >\r\n                          Valider\r\n                        </button>\r\n\r\n                        <button\r\n                          className='button is-small is-warning'\r\n                          onClick={() => {\r\n                            setShowNewStepForm(false);\r\n                          }}\r\n                        >\r\n                          Annuler\r\n                        </button>\r\n                      </div>\r\n                    </form>\r\n                  </div>\r\n                )}\r\n\r\n                {localSteps.length > 0 ? (\r\n                  localSteps.map((step) => {\r\n                    return (\r\n                      <IndividualStep\r\n                        step={step}\r\n                        key={uuidv4()}\r\n                        deleteFunction={() => {\r\n                          deleteStepFunction(step._id);\r\n                        }}\r\n                        updateFunction={updateStepFunction}\r\n                      />\r\n                    );\r\n                  })\r\n                ) : (\r\n                  <p className='is-size-6 has-text-weight-semibold'>\r\n                    Ce processus ne comprend aucune étape\r\n                  </p>\r\n                )}\r\n\r\n                {/* COLLECTIONS */}\r\n\r\n                <RemoveFromCollection\r\n                  origin={\"processes\"}\r\n                  targetDocumentId={currentProcess._id}\r\n                  currentCollections={currentProcess.collections}\r\n                  removeCollectionFromMotherProcess={(collectionObject) => {\r\n                    setCurrentProcess({\r\n                      ...currentProcess,\r\n                      collections: currentProcess.collections.filter(\r\n                        (collection) => {\r\n                          return collection._id !== collectionObject._id;\r\n                        }\r\n                      ),\r\n                    });\r\n                  }}\r\n                />\r\n\r\n                {showAddToCollectionForm ? (\r\n                  <AddToCollectionForm\r\n                    origin={\"processes\"}\r\n                    targetDocumentId={currentProcess._id}\r\n                    addCollectionToMotherProcess={(collectionObject) => {\r\n                      setCurrentProcess({\r\n                        ...currentProcess,\r\n                        collections: [\r\n                          ...currentProcess.collections,\r\n                          collectionObject,\r\n                        ],\r\n                      });\r\n                    }}\r\n                    closeAddToCollectionForm={() => {\r\n                      setShowAddToCollectionForm(false);\r\n                    }}\r\n                  />\r\n                ) : (\r\n                  <div className='block'>\r\n                    <button\r\n                      className='button is-small is-info'\r\n                      onClick={() => {\r\n                        setShowAddToCollectionForm(true);\r\n                      }}\r\n                    >\r\n                      Ajouter à une collection\r\n                    </button>\r\n                  </div>\r\n                )}\r\n              </Fragment>\r\n            ) : (\r\n              <p className='is-size-4 has-text-centered has-text-weight-semibold'>\r\n                Aucun processus chargé\r\n              </p>\r\n            )}\r\n          </Fragment>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProcessDetail;\r\n","import React, { useEffect, useState, Fragment } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport axios from \"axios\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { setLoading, config } from \"./../../actions/userActions\";\r\n\r\nimport MainLoading from \"./../parts/MainLoading\";\r\nimport IndividualNote from \"../parts/IndividualNote\";\r\nimport IndividualProcess from \"../parts/IndividualProcess\";\r\nimport IndividualTask from \"../parts/IndividualTask\";\r\nimport ErrorMsgBoard from \"../parts/ErrorMsgBoard\";\r\nimport MessageBoard from \"../parts/MessageBoard\";\r\n\r\nimport { setErrorMsgs } from \"./../../actions/userActions\";\r\n\r\nconst CollectionDetail = (props) => {\r\n  const collectionId = props.match.params.collectionId;\r\n\r\n  const dispatch = useDispatch();\r\n  const { loading } = useSelector((state) => state.user);\r\n\r\n  const [currentCollection, setCurrentCollection] = useState({});\r\n\r\n  const [showCollectionUpdateForm, setShowCollectionUpdateForm] =\r\n    useState(false);\r\n\r\n  const [updatedCollection, setUpdatedCollection] = useState({\r\n    title: \"\",\r\n    description: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    const getCollection = async () => {\r\n      try {\r\n        dispatch(setLoading(true));\r\n\r\n        const collectionRes = await axios.get(\r\n          `http://localhost:5000/api/collections/get_collection_complete/${collectionId}`\r\n        );\r\n\r\n        setCurrentCollection(collectionRes.data.collectionComplete);\r\n\r\n        setUpdatedCollection({\r\n          title: collectionRes.data.collectionComplete.title,\r\n          description: collectionRes.data.collectionComplete.description,\r\n        });\r\n\r\n        dispatch(setLoading(false));\r\n      } catch (err) {\r\n        dispatch(\r\n          setErrorMsgs(\r\n            err.response && err.response.data.error_msg\r\n              ? [...err.response.data.error_msg]\r\n              : [\r\n                  \"Nous sommes désolés, une erreur inattendue s'est produite lors du chargement\",\r\n                ]\r\n          )\r\n        );\r\n\r\n        props.history.push(\"/\");\r\n\r\n        dispatch(setLoading(false));\r\n      }\r\n    };\r\n\r\n    getCollection(collectionId);\r\n  }, []);\r\n\r\n  const handleCollectionUpdateSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      dispatch(setLoading(true));\r\n\r\n      const collectionUpdateRes = await axios.patch(\r\n        `http://localhost:5000/api/collections/update_collection/${currentCollection._id}`,\r\n        {\r\n          title: updatedCollection.title,\r\n          description: updatedCollection.description,\r\n        },\r\n        config\r\n      );\r\n\r\n      setCurrentCollection({\r\n        ...currentCollection,\r\n        title: collectionUpdateRes.data.updatedCollection.title,\r\n        description: collectionUpdateRes.data.updatedCollection.description,\r\n      });\r\n      setUpdatedCollection({ title: \"\", description: \"\" });\r\n\r\n      setShowCollectionUpdateForm(false);\r\n\r\n      dispatch(setLoading(false));\r\n    } catch (err) {\r\n      dispatch(setErrorMsgs([err.response.data.error_msg]));\r\n      dispatch(setLoading(false));\r\n    }\r\n  };\r\n\r\n  const handleCollectionUpdateChange = (event) => {\r\n    setUpdatedCollection({\r\n      ...updatedCollection,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const handleDeleteCollection = async () => {\r\n    try {\r\n      dispatch(setLoading(true));\r\n\r\n      await axios.delete(\r\n        `http://localhost:5000/api/collections/delete_collection/${currentCollection._id}`\r\n      );\r\n\r\n      props.history.push(\"/\");\r\n    } catch (err) {\r\n      dispatch(setErrorMsgs([err.response.data.error_msg]));\r\n      dispatch(setLoading(false));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='columns'>\r\n      <div className='column is-three-fifths is-offset-one-fifth'>\r\n        {loading ? (\r\n          <MainLoading />\r\n        ) : (\r\n          <Fragment>\r\n            <div className='block mt-5'>\r\n              <Link to={\"/\"} className='has-text-weight-medium'>\r\n                Retour aux collections\r\n              </Link>\r\n            </div>\r\n\r\n            <div className='columns my-0 py-0'>\r\n              <div className='column is-half is-offset-one-quarter'>\r\n                <MessageBoard />\r\n                <ErrorMsgBoard />\r\n              </div>\r\n            </div>\r\n\r\n            <div className='block'>\r\n              <div className='content'>\r\n                <h1>{currentCollection.title}</h1>\r\n\r\n                <p>{currentCollection.description}</p>\r\n              </div>\r\n            </div>\r\n\r\n            {showCollectionUpdateForm ? (\r\n              <Fragment>\r\n                <div className='block'>\r\n                  <form onSubmit={handleCollectionUpdateSubmit}>\r\n                    <div className='field'>\r\n                      <label className='label'>Titre</label>\r\n\r\n                      <p className='control'>\r\n                        <input\r\n                          className='input is-medium is-info'\r\n                          value={updatedCollection.title}\r\n                          type='text'\r\n                          name='title'\r\n                          placeholder='Titre'\r\n                          onChange={handleCollectionUpdateChange}\r\n                        />\r\n                      </p>\r\n                    </div>\r\n\r\n                    <div className='field'>\r\n                      <label className='label'>Titre</label>\r\n\r\n                      <p className='control'>\r\n                        <textarea\r\n                          className='textarea is-info'\r\n                          value={updatedCollection.description}\r\n                          type='textarea'\r\n                          name='description'\r\n                          placeholder='Description'\r\n                          onChange={handleCollectionUpdateChange}\r\n                        ></textarea>\r\n                      </p>\r\n                    </div>\r\n\r\n                    <div className='buttons'>\r\n                      <button className='button is-small is-info' type='submit'>\r\n                        Valider\r\n                      </button>\r\n\r\n                      <button\r\n                        className='button is-small is-warning'\r\n                        onClick={() => {\r\n                          setShowCollectionUpdateForm(false);\r\n                        }}\r\n                      >\r\n                        Annuler\r\n                      </button>\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n              </Fragment>\r\n            ) : (\r\n              <div className='block'>\r\n                <div className='buttons'>\r\n                  <button\r\n                    className='button is-small is-warning'\r\n                    onClick={() => {\r\n                      setShowCollectionUpdateForm(true);\r\n                    }}\r\n                  >\r\n                    Modifier\r\n                  </button>\r\n\r\n                  <button\r\n                    className='button is-small is-danger'\r\n                    onClick={handleDeleteCollection}\r\n                  >\r\n                    Supprimer\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            <h2 className='subtitle'>Tâches</h2>\r\n\r\n            {currentCollection.tasks && currentCollection.tasks.length > 0 ? (\r\n              currentCollection.tasks.map((task) => {\r\n                return <IndividualTask key={uuidv4()} task={task} />;\r\n              })\r\n            ) : (\r\n              <p className='is-size-6 has-text-weight-light'>\r\n                Aucune tâche associée à cette collection\r\n              </p>\r\n            )}\r\n\r\n            <h2 className='subtitle'>Notes</h2>\r\n\r\n            {currentCollection.notes && currentCollection.notes.length > 0 ? (\r\n              currentCollection.notes.map((note) => {\r\n                return <IndividualNote key={uuidv4()} note={note} />;\r\n              })\r\n            ) : (\r\n              <p className='is-size-6 has-text-weight-light'>\r\n                Aucune note associée à cette collection\r\n              </p>\r\n            )}\r\n\r\n            <h2 className='subtitle'>Processus</h2>\r\n\r\n            {currentCollection.processes &&\r\n            currentCollection.processes.length > 0 ? (\r\n              currentCollection.processes.map((process) => {\r\n                return <IndividualProcess key={uuidv4()} process={process} />;\r\n              })\r\n            ) : (\r\n              <p className='is-size-6 has-text-weight-light'>\r\n                Aucun processus associée à cette collection\r\n              </p>\r\n            )}\r\n          </Fragment>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CollectionDetail;\r\n","import React, { useState, useEffect, Fragment } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport {\r\n  updateNote,\r\n  deleteNote,\r\n  setLoading,\r\n  setErrorMsgs,\r\n} from \"./../../actions/userActions\";\r\n\r\nimport AddToCollectionForm from \"../parts/AddToCollectionForm\";\r\nimport RemoveFromCollection from \"../parts/RemoveFromCollection\";\r\nimport MainLoading from \"./../parts/MainLoading\";\r\nimport ErrorMsgBoard from \"../parts/ErrorMsgBoard\";\r\nimport MessageBoard from \"../parts/MessageBoard\";\r\n\r\nconst NoteDetail = (props) => {\r\n  const dispatch = useDispatch();\r\n  const { loading } = useSelector((state) => state.user);\r\n\r\n  const [localNote, setLocalNote] = useState(null);\r\n\r\n  const [showUpdateForm, setShowUpdateForm] = useState(false);\r\n  const [updatedNoteContent, setUpdatedNoteContent] = useState();\r\n  const [showAddToCollectionForm, setShowAddToCollectionForm] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const getNote = async () => {\r\n      try {\r\n        dispatch(setLoading(true));\r\n\r\n        const res = await axios.get(\r\n          `http://localhost:5000/api/notes/get_note/${props.match.params.noteId}`\r\n        );\r\n\r\n        setLocalNote(res.data.note);\r\n        setUpdatedNoteContent(res.data.note.content);\r\n\r\n        dispatch(setLoading(false));\r\n      } catch (err) {\r\n        dispatch(\r\n          setErrorMsgs(\r\n            err.response && err.response.data.error_msg\r\n              ? [err.response.data.error_msg]\r\n              : [\r\n                  \"Nous sommes désolés, une erreur inattendue s'est produite lors du chargement\",\r\n                ]\r\n          )\r\n        );\r\n\r\n        props.history.push(\"/\");\r\n      }\r\n    };\r\n\r\n    getNote();\r\n  }, []);\r\n\r\n  const handleUpdatedContentChange = (event) => {\r\n    setUpdatedNoteContent(event.target.value);\r\n  };\r\n\r\n  const handleNoteUpdate = async (event) => {\r\n    event.preventDefault();\r\n\r\n    // updateNote return a success status boolean to allow the local note to be updated\r\n    let updateSuccessful = await dispatch(\r\n      updateNote({\r\n        content: updatedNoteContent,\r\n        noteToUpdateId: localNote._id,\r\n      })\r\n    );\r\n\r\n    updateSuccessful &&\r\n      setLocalNote({ ...localNote, content: updatedNoteContent });\r\n\r\n    setUpdatedNoteContent(localNote.content);\r\n\r\n    setShowUpdateForm(false);\r\n  };\r\n\r\n  return (\r\n    <div className='columns'>\r\n      <div className='column is-three-fifths is-offset-one-fifth'>\r\n        {localNote && !loading ? (\r\n          <Fragment>\r\n            <div className='block mt-5'>\r\n              <Link to={\"/\"} className='has-text-weight-medium'>\r\n                Retour aux Notes\r\n              </Link>\r\n            </div>\r\n\r\n            <div className='columns my-0 py-0'>\r\n              <div className='column is-half is-offset-one-quarter'>\r\n                <MessageBoard />\r\n                <ErrorMsgBoard />\r\n              </div>\r\n            </div>\r\n\r\n            {showUpdateForm ? (\r\n              <div className='block'>\r\n                <form onSubmit={handleNoteUpdate}>\r\n                  <div className='field'>\r\n                    <label className='label'>Titre</label>\r\n\r\n                    <p className='control'>\r\n                      <textarea\r\n                        className='textarea is-info'\r\n                        name='content'\r\n                        value={updatedNoteContent}\r\n                        onChange={handleUpdatedContentChange}\r\n                      ></textarea>\r\n                    </p>\r\n                  </div>\r\n\r\n                  <div className='buttons'>\r\n                    <button className='button is-small is-info' type='submit'>\r\n                      Mettre à jour\r\n                    </button>\r\n\r\n                    <button\r\n                      className='button is-small is-warning'\r\n                      onClick={() => {\r\n                        setShowUpdateForm(false);\r\n                      }}\r\n                    >\r\n                      Annuler\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            ) : (\r\n              <Fragment>\r\n                <div className='block'>\r\n                  <div className='content'>\r\n                    <p>{localNote.content}</p>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className='block'>\r\n                  <div className='buttons'>\r\n                    <button\r\n                      className='button is-small is-warning'\r\n                      onClick={() => {\r\n                        setShowUpdateForm(true);\r\n                      }}\r\n                    >\r\n                      Modifier\r\n                    </button>\r\n\r\n                    <button\r\n                      className='button is-small is-danger'\r\n                      onClick={() => {\r\n                        dispatch(deleteNote(localNote._id));\r\n                        props.history.push(\"/\");\r\n                      }}\r\n                    >\r\n                      Supprimer\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </Fragment>\r\n            )}\r\n\r\n            <RemoveFromCollection\r\n              origin={\"notes\"}\r\n              targetDocumentId={localNote._id}\r\n              currentCollections={localNote.collections}\r\n              removeCollectionFromMotherProcess={(collectionObject) => {\r\n                setLocalNote({\r\n                  ...localNote,\r\n                  collections: localNote.collections.filter((collection) => {\r\n                    return collection._id !== collectionObject._id;\r\n                  }),\r\n                });\r\n              }}\r\n            />\r\n\r\n            {showAddToCollectionForm ? (\r\n              <AddToCollectionForm\r\n                origin={\"notes\"}\r\n                targetDocumentId={localNote._id}\r\n                addCollectionToMotherProcess={(collectionObject) => {\r\n                  setLocalNote({\r\n                    ...localNote,\r\n                    collections: [...localNote.collections, collectionObject],\r\n                  });\r\n                }}\r\n                closeAddToCollectionForm={() => {\r\n                  setShowAddToCollectionForm(false);\r\n                }}\r\n              />\r\n            ) : (\r\n              <div className='block'>\r\n                <button\r\n                  className='button is-small is-info'\r\n                  onClick={() => {\r\n                    setShowAddToCollectionForm(true);\r\n                  }}\r\n                >\r\n                  Ajouter à une collection\r\n                </button>\r\n              </div>\r\n            )}\r\n          </Fragment>\r\n        ) : (\r\n          <MainLoading />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NoteDetail;\r\n","import {\r\n  SET_LOADING,\r\n  AUTH_ERROR,\r\n  LOGIN_SUCCESS,\r\n  LOGOUT,\r\n  LOAD_COLLECTIONS,\r\n  LOAD_TASKS,\r\n  LOAD_PROCESSES,\r\n  LOAD_NOTES,\r\n  CHANGE_MODE,\r\n  SET_LOADING_PARTIAL,\r\n  NEW_TASK_ADDED,\r\n  DELETE_TASK,\r\n  ADD_SUBTASK,\r\n  DELETE_SUBTASK,\r\n  UPDATE_TASk,\r\n  UNFINISH_TASK,\r\n  FINISH_TASK,\r\n  UPDATE_NOTE,\r\n  DELETE_NOTE,\r\n  ADD_NOTE,\r\n  ADD_PROCESS,\r\n  ADD_NEW_COLLECTION,\r\n  ADD_TO_COLLECTION,\r\n  REMOVE_FROM_COLLECTION,\r\n  SET_MESSAGES,\r\n  SET_ERROR_MSGS,\r\n  DELETE_INDIVIDUAL_ERROR_MSG,\r\n  DELETE_ALL_ERROR_MSG,\r\n  DELETE_ALL_MSG,\r\n  DELETE_INDIVIDUAL_MSG,\r\n} from \"./../actions/types\";\r\n\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst initialState = {\r\n  token: localStorage.getItem(\"token\"),\r\n  isAuthenticated: false,\r\n  loading: false,\r\n  user: null,\r\n  mode: \"TASKS\",\r\n  notes: [],\r\n  collections: [],\r\n  processes: [],\r\n  tasks: [],\r\n  messages: [],\r\n  error_msgs: [],\r\n\r\n  loading_partial: false,\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_LOADING:\r\n      return { ...state, loading: action.payload };\r\n\r\n    case SET_LOADING_PARTIAL:\r\n      return { ...state, loading_partial: action.payload };\r\n\r\n    case LOGIN_SUCCESS:\r\n      localStorage.setItem(\"token\", action.payload.token);\r\n\r\n      return {\r\n        ...state,\r\n        token: action.payload.token,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n        user: action.payload.user,\r\n        messages: [],\r\n        error_msgs: [],\r\n      };\r\n\r\n    case AUTH_ERROR:\r\n    case LOGOUT:\r\n      localStorage.removeItem(\"token\");\r\n\r\n      return {\r\n        ...state,\r\n        token: null,\r\n        isAuthenticated: false,\r\n        loading: false,\r\n        loading_partial: false,\r\n        user: null,\r\n        notes: [],\r\n        collections: [],\r\n        processes: [],\r\n        tasks: [],\r\n        messages: [],\r\n        error_msgs: [],\r\n\r\n        mode: \"TASKS\",\r\n      };\r\n\r\n    case CHANGE_MODE:\r\n      return {\r\n        ...state,\r\n        mode: action.payload,\r\n      };\r\n\r\n    case LOAD_COLLECTIONS:\r\n      return {\r\n        ...state,\r\n        collections: action.payload.collections,\r\n      };\r\n\r\n    case LOAD_NOTES:\r\n      return {\r\n        ...state,\r\n        notes: action.payload.notes,\r\n      };\r\n\r\n    case LOAD_PROCESSES:\r\n      return {\r\n        ...state,\r\n        processes: action.payload.processes,\r\n      };\r\n\r\n    case LOAD_TASKS:\r\n      return {\r\n        ...state,\r\n        tasks: action.payload.tasks,\r\n      };\r\n\r\n    case NEW_TASK_ADDED:\r\n      return { ...state, tasks: [...state.tasks, action.payload.newTask] };\r\n\r\n    case DELETE_TASK:\r\n      return {\r\n        ...state,\r\n        tasks: state.tasks.filter((task) => {\r\n          return task._id !== action.payload.removedTask._id;\r\n        }),\r\n      };\r\n\r\n    case UPDATE_TASk:\r\n      let indexToUpdate = state.tasks.findIndex(\r\n        (task) => task._id === action.payload.updatedTask._id\r\n      );\r\n      state.tasks[indexToUpdate] = action.payload.updatedTask;\r\n\r\n      return { ...state };\r\n\r\n    case FINISH_TASK:\r\n      let indexToFinish = state.tasks.findIndex(\r\n        (task) => task._id === action.payload.finishedTask._id\r\n      );\r\n      state.tasks[indexToFinish] = action.payload.finishedTask;\r\n\r\n      return { ...state };\r\n\r\n    case UNFINISH_TASK:\r\n      let indexToUnfinish = state.tasks.findIndex(\r\n        (task) => task._id === action.payload.unfinishedTask._id\r\n      );\r\n      state.tasks[indexToUnfinish] = action.payload.unfinishedTask;\r\n\r\n      return { ...state };\r\n\r\n    case ADD_SUBTASK:\r\n      let indexMotherTaskToUpdateId = state.tasks.findIndex(\r\n        (task) => task._id === action.payload.newSubTask.task._id\r\n      );\r\n\r\n      let motherTaskToAddSubtask = state.tasks[indexMotherTaskToUpdateId];\r\n\r\n      motherTaskToAddSubtask.subtasks = [\r\n        ...motherTaskToAddSubtask.subtasks,\r\n        action.payload.newSubTask,\r\n      ];\r\n\r\n      return { ...state, tasks: [state.tasks, motherTaskToAddSubtask] };\r\n\r\n    case DELETE_SUBTASK:\r\n      let indexMotherTaskToDeleteSubtaskFromId = state.tasks.findIndex(\r\n        (task) => task._id === action.payload.updatedMotherTask._id\r\n      );\r\n\r\n      state.tasks[indexMotherTaskToDeleteSubtaskFromId] =\r\n        action.payload.updatedMotherTask;\r\n\r\n      return { ...state };\r\n\r\n    case UPDATE_NOTE:\r\n      let indexNoteToUpdate = state.notes.findIndex(\r\n        (note) => note._id === action.payload.note._id\r\n      );\r\n\r\n      state.notes[indexNoteToUpdate] = action.payload.note;\r\n\r\n      return { ...state };\r\n\r\n    case DELETE_NOTE:\r\n      return {\r\n        ...state,\r\n        notes: [\r\n          ...state.notes.filter((note) => {\r\n            return note._id !== action.payload.removedNote._id;\r\n          }),\r\n        ],\r\n      };\r\n\r\n    case ADD_NOTE:\r\n      return { ...state, notes: [...state.notes, action.payload.newNote] };\r\n\r\n    case ADD_PROCESS:\r\n      return {\r\n        ...state,\r\n        processes: [...state.processes, action.payload.newProcess],\r\n      };\r\n\r\n    case ADD_NEW_COLLECTION:\r\n      return {\r\n        ...state,\r\n        collections: [...state.collections, action.payload.newCollection],\r\n      };\r\n\r\n    case REMOVE_FROM_COLLECTION:\r\n    case ADD_TO_COLLECTION:\r\n      let indexCollectionToAddDocument = state.collections.findIndex(\r\n        (collection) => collection._id === action.payload._id\r\n      );\r\n\r\n      state.collections[indexCollectionToAddDocument] = action.payload;\r\n\r\n      return {\r\n        ...state,\r\n      };\r\n\r\n    case SET_ERROR_MSGS:\r\n      let treatedErrors = action.payload.map((err) => {\r\n        return { error_msg: err, _id: uuidv4() };\r\n      });\r\n\r\n      return {\r\n        ...state,\r\n        error_msgs: [...state.error_msgs, ...treatedErrors],\r\n      };\r\n\r\n    case DELETE_INDIVIDUAL_ERROR_MSG:\r\n      return {\r\n        ...state,\r\n        error_msgs: state.error_msgs.filter((error_msg) => {\r\n          return error_msg._id !== action.payload;\r\n        }),\r\n      };\r\n\r\n    case DELETE_ALL_ERROR_MSG:\r\n      return {\r\n        ...state,\r\n        error_msgs: [],\r\n      };\r\n\r\n    case SET_MESSAGES:\r\n      let treatedMessages = action.payload.map((msg) => {\r\n        return { msg: msg, _id: uuidv4() };\r\n      });\r\n\r\n      return {\r\n        ...state,\r\n        messages: [...state.messages, ...treatedMessages],\r\n      };\r\n\r\n    case DELETE_INDIVIDUAL_MSG:\r\n      return {\r\n        ...state,\r\n        messages: state.messages.filter((message) => {\r\n          return message._id !== action.payload;\r\n        }),\r\n      };\r\n\r\n    case DELETE_ALL_MSG:\r\n      return {\r\n        ...state,\r\n        messages: [],\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\n\r\nimport userReducer from \"./userReducer\";\r\n\r\nconst persistConfig = {\r\n  key: \"root\",\r\n  storage,\r\n  whitelist: [\"user\"],\r\n};\r\n\r\nconst rootReducer = combineReducers({\r\n  user: userReducer,\r\n});\r\n\r\nexport default persistReducer(persistConfig, rootReducer);\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { persistStore } from \"redux-persist\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst middleware = [thunk];\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(...middleware));\r\n\r\n// for redux persist\r\nexport const persistor = persistStore(store);\r\n\r\n// eslint-disable-next-line\r\nexport default { store, persistor };\r\n","import React, { useEffect } from \"react\";\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Redirect,\r\n  Route,\r\n} from \"react-router-dom\";\r\n\r\nimport \"bulma/css/bulma.min.css\";\r\nimport \"./styles/styles.css\";\r\n//Components\r\nimport PrivateRoute from \"./components/routes/PrivateRoute\";\r\n\r\nimport Home from \"./components/pages/Home\";\r\nimport Login from \"./components/pages/Login\";\r\nimport Register from \"./components/pages/Register\";\r\nimport TaskDetail from \"./components/pages/TaskDetail\";\r\nimport ProcessDetail from \"./components/pages/ProcessDetail\";\r\nimport CollectionDetail from \"./components/pages/CollectionDetail\";\r\nimport NoteDetail from \"./components/pages/NoteDetail\";\r\n\r\n// Utils\r\nimport setAuthToken from \"./utils/setAuthToken\";\r\n\r\n// REDUX\r\nimport { Provider } from \"react-redux\";\r\nimport { store, persistor } from \"./store\";\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\n\r\nfunction App() {\r\n  useEffect(() => {\r\n    if (localStorage.token) {\r\n      setAuthToken(localStorage.token);\r\n    }\r\n  });\r\n\r\n  return (\r\n    <Provider store={store}>\r\n      <div className='main has-background-light'>\r\n        <Router>\r\n          <PersistGate persistor={persistor}>\r\n            <Switch>\r\n              <PrivateRoute exact path='/' component={Home} />\r\n\r\n              <Route exact path='/login' component={Login} />\r\n\r\n              <Route exact path='/register' component={Register} />\r\n\r\n              <PrivateRoute exact path='/task/:taskId' component={TaskDetail} />\r\n\r\n              <PrivateRoute\r\n                exact\r\n                path='/process/:processId'\r\n                component={ProcessDetail}\r\n              />\r\n\r\n              <PrivateRoute exact path='/note/:noteId' component={NoteDetail} />\r\n\r\n              <PrivateRoute\r\n                exact\r\n                path='/collection/:collectionId'\r\n                component={CollectionDetail}\r\n              />\r\n\r\n              <Redirect to='/' />\r\n            </Switch>\r\n          </PersistGate>\r\n        </Router>\r\n      </div>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  /* StrictMode is a tool for highlighting potential problems in an application. Like Fragment, StrictMode does not render any visible UI. It activates additional checks and warnings for its descendants.\n  Strict mode checks are run in development mode only; they do not impact the production build. */\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}